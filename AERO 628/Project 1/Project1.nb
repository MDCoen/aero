(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    447980,       9181]
NotebookOptionsPosition[    438891,       8882]
NotebookOutlinePosition[    439232,       8897]
CellTagsIndexPosition[    439189,       8894]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "AERO 628: Project 1\n",
 StyleBox["Prolate Rigid Body Rotation\n", "Chapter"],
 StyleBox["Mauricio Coen", "Subsection"]
}], "Title",
 CellChangeTimes->{{3.6623092147838907`*^9, 3.6623092769920363`*^9}, {
  3.6623992724390574`*^9, 3.6623992727762012`*^9}}],

Cell[CellGroupData[{

Cell["Angular Velocity Solution", "Section",
 CellChangeTimes->{{3.662389371749515*^9, 3.662389387171297*^9}}],

Cell["The body has the following inertia matrix:", "Text",
 CellChangeTimes->{{3.662309286010974*^9, 3.662309315365441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[ImaginaryI]", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"It", "0", "0"},
      {"0", "It", "0"},
      {"0", "0", "Ia"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.662309325776637*^9, 3.6623093622138534`*^9}, {
  3.66239965988496*^9, 3.662399676948694*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "wrsym"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Symbol \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\[ImaginaryI]\\\"}]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/wrsym\\\", \
ButtonNote -> \\\"Set::wrsym\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662740822875757*^9, 3.662741030595211*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"It", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "It", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "Ia"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.662740822877089*^9, 3.6627410305965643`*^9}]
}, Open  ]],

Cell["And has a torque applied u:", "Text",
 CellChangeTimes->{{3.6623093748171277`*^9, 3.662309435742094*^9}, {
  3.662309976714374*^9, 3.662309977438444*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["u", "It"], "=", "0.2"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.6623099807486534`*^9, 3.6623099865127134`*^9}, 
   3.662310095797489*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Times\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*FractionBox[\\\"u\\\", \\\"It\\\"]\\)\[NoBreak] is \
Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662740823139593*^9, 3.6627410307524757`*^9}],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{3.662740823141086*^9, 3.662741030753716*^9}]
}, Open  ]],

Cell["\<\
Using Euler\[CloseCurlyQuote]s Eqs. of Motion: Since it is an \
axissymmetric-prolate body, the angular acceleration in the body-3 direction \
is zero.  \
\>", "Text",
 CellChangeTimes->{{3.6623095439795246`*^9, 3.662309613645094*^9}, {
  3.6623105404207954`*^9, 3.6623105479380426`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["l", "3"], "=", 
   RowBox[{
    RowBox[{"Ia", " ", 
     OverscriptBox[
      SubscriptBox["\[Omega]", "3"], "."]}], "=", "0"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{
  3.6623096176141396`*^9, {3.6623101196764154`*^9, 3.6623101468095446`*^9}, {
   3.6623101925697737`*^9, 3.6623102636077156`*^9}, {3.662310295313452*^9, 
   3.662310295807724*^9}, {3.6623104023635073`*^9, 3.6623104398978424`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Times\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Ia\\\", \\\" \\\", OverscriptBox[SubscriptBox[\
\\\"\[Omega]\\\", \\\"3\\\"], \\\".\\\"]}]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662740823231504*^9, 3.662741030803269*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6627408232327347`*^9, 3.6627410308046*^9}]
}, Open  ]],

Cell[TextData[{
 "So we can call ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "3"], TraditionalForm]]],
 "=n which is a constant. Now simplifying the other expressions of Euler Eqs. \
of Motion:"
}], "Text",
 CellChangeTimes->{{3.6623104511282187`*^9, 3.6623105523751564`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox["l", "2"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", 
      SubscriptBox["\[Omega]", "1"], " ", 
      RowBox[{"(", 
       RowBox[{"It", "-", "Ia"}], ")"}]}], "+", 
     RowBox[{"It", " ", 
      OverscriptBox[
       SubscriptBox["\[Omega]", "2"], "."]}]}], "=", "0"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   OverscriptBox[
    SubscriptBox["\[Omega]", "2"], "."], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{"Ita", "-", "It"}], ")"}], "It"], "n", " ", 
    SubscriptBox["\[Omega]", "1"]}]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.6623105549234233`*^9, 3.6623106236562586`*^9}, {
  3.66231079192457*^9, 3.6623108474695897`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(\\*RowBox[{\\\"Plus\\\"}]\\)\[NoBreak] \
in \[NoBreak]\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"Ia\\\"}], \\\"+\\\", \\\"It\\\"}], \
\\\")\\\"}], \\\" \\\", \\\"n\\\", \\\" \\\", SubscriptBox[\\\"\[Omega]\\\", \
\\\"1\\\"]}], \\\"-\\\", RowBox[{\\\"It\\\", \\\" \\\", \\\"\[Lambda]\\\", \\\
\" \\\", RowBox[{SubscriptBox[\\\"\[Omega]\\\", \\\"1\\\"], \\\"[\\\", \
\\\"0\\\", \\\"]\\\"}]}]}]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662740823376354*^9, 3.662741030856463*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.662740823377756*^9, 3.66274103085788*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "It"}], "+", "Ita"}], ")"}], " ", "n", " ", 
   SubscriptBox["\[Omega]", "1"]}], "It"]], "Output",
 CellChangeTimes->{3.662740823377756*^9, 3.6627410308586607`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{"u", "=", 
   RowBox[{
    RowBox[{"n", " ", 
     SubscriptBox["\[Omega]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"Ia", "-", "It"}], ")"}]}], "+", 
    RowBox[{"It", " ", 
     OverscriptBox[
      SubscriptBox["\[Omega]", "1"], "."]}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{" ", 
   RowBox[{
    OverscriptBox[
     SubscriptBox["\[Omega]", "1"], "."], "=", 
    RowBox[{
     FractionBox["u", "It"], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"(", 
        RowBox[{"It", "-", "Ia"}], ")"}], "It"], " ", "n", " ", 
      SubscriptBox["\[Omega]", "2"]}]}]}]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.6623107122774734`*^9, 3.662310770419888*^9}, {
  3.6623108573428936`*^9, 3.6623109177007294`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Ia", "-", "It"}], ")"}], " ", "n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["l", "\[Lambda]"]}], "+", 
     RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
     RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}]}], "+", 
  RowBox[{"It", " ", 
   RowBox[{"(", 
    RowBox[{"l", "+", 
     RowBox[{"\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["l", "\[Lambda]"]}], "+", 
        RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
        RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.6627408234870863`*^9, 3.6627410308766193`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", "n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["l", "\[Lambda]"]}], "+", 
      RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
      RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}]}], "It"],
   "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Ia", "-", "It"}], ")"}], " ", "n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["l", "\[Lambda]"]}], "+", 
       RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
       RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}]}], "+", 
    RowBox[{"It", " ", 
     RowBox[{"(", 
      RowBox[{"l", "+", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["l", "\[Lambda]"]}], "+", 
          RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
          RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}]}]}], 
      ")"}]}]}], "It"]}]], "Output",
 CellChangeTimes->{3.6627408234870863`*^9, 3.6627410308782454`*^9}]
}, Open  ]],

Cell["Now, we define the following expressions:", "Text",
 CellChangeTimes->{{3.66231096612185*^9, 3.662310990478228*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{
   FractionBox["u", "It"], "\[Congruent]", "l"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"\[Lambda]", "\[Congruent]", 
   RowBox[{
    FractionBox[
     RowBox[{"It", "-", "Ia"}], "It"], " ", "n", " "}]}], 
  TraditionalForm]}], "Input",
 CellChangeTimes->{{3.662311000492383*^9, 3.662311014302886*^9}, {
  3.6623111673055573`*^9, 3.662311185857071*^9}, {3.6623112225538435`*^9, 
  3.662311319527728*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Ia", "-", "It"}], ")"}], " ", "n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["l", "\[Lambda]"]}], "+", 
       RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
       RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}]}], "+", 
    RowBox[{"It", " ", 
     RowBox[{"(", 
      RowBox[{"l", "+", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["l", "\[Lambda]"]}], "+", 
          RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
          RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}]}]}], 
      ")"}]}]}], "It"], "\[Congruent]", "l"}]], "Output",
 CellChangeTimes->{3.6627408237433043`*^9, 3.662741030897361*^9}],

Cell[BoxData[
 RowBox[{"\[Lambda]", "\[Congruent]", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", "n"}], "It"]}]], "Output",
 CellChangeTimes->{3.6627408237433043`*^9, 3.6627410308985157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{
   OverscriptBox[
    SubscriptBox["\[Omega]", "1"], "."], "=", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     SubscriptBox["\[Omega]", "2"]}], "+", "l"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   OverscriptBox[
    SubscriptBox["\[Omega]", "2"], "."], "=", 
   RowBox[{
    RowBox[{"-", "\[Lambda]"}], " ", 
    SubscriptBox["\[Omega]", "1"]}]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.662311424907589*^9, 3.6623115350298653`*^9}, 
   3.6623117292298355`*^9}],

Cell[BoxData[
 RowBox[{"l", "+", 
  RowBox[{"\[Lambda]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["l", "\[Lambda]"]}], "+", 
     RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
     RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.662740823850403*^9, 3.662741030918811*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Lambda]"}], " ", 
  SubscriptBox["\[Omega]", "1"]}]], "Output",
 CellChangeTimes->{3.662740823850403*^9, 3.6627410309198103`*^9}]
}, Open  ]],

Cell["Differentiating the above and substituting:", "Text",
 CellChangeTimes->{{3.6623115370486097`*^9, 3.66231156678489*^9}, {
  3.6623117509805813`*^9, 3.6623117517732577`*^9}}],

Cell[BoxData[{
 RowBox[{
  OverscriptBox[
   SubscriptBox["\[Omega]", "2"], ".."], "=", 
  RowBox[{
   RowBox[{"-", "\[Lambda]"}], 
   OverscriptBox[
    SubscriptBox["\[Omega]", "1"], "."]}]}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["\[Omega]", "2"], ".."], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], 
    SubscriptBox["\[Omega]", "2"]}]}], "=", "\[Lambda]l"}]}], "Input",
 CellChangeTimes->{{3.6623115689383383`*^9, 3.6623117801897306`*^9}, 
   3.662399707769309*^9, 3.6624753338307343`*^9},
 EmphasizeSyntaxErrors->True],

Cell["\<\
The differential equation can be solved by merging the homogeneous solution:\
\>", "Text",
 CellChangeTimes->{{3.6623117946716633`*^9, 3.6623118099673758`*^9}, {
  3.6623118615397005`*^9, 3.662311881255102*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["w", 
    RowBox[{"2", " ", "H"}]], "=", 
   RowBox[{
    RowBox[{"a", " ", "sin", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", " ", "t"}], ")"}]}], "+", 
    RowBox[{"b", " ", "cos", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", " ", "t"}], ")"}]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.662311884159478*^9, 3.6623119334953895`*^9}, {
  3.662399534180114*^9, 3.662399536644698*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
  RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{3.66274082414979*^9, 3.662741030988044*^9}]
}, Open  ]],

Cell["With the particular solution:", "Text",
 CellChangeTimes->{{3.662311938528614*^9, 3.6623119779929924`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Omega]", 
    RowBox[{"2", "P"}]], "=", "c"}], ",", "\[Therefore]"}]], "Input",
 CellChangeTimes->{{3.6623119805032377`*^9, 3.6623120460268116`*^9}, {
   3.662312089195494*^9, 3.662312089756687*^9}, 3.662312124689839*^9, 
   3.6623882187371273`*^9},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"c", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "=", 
   RowBox[{"\[Lambda]", " ", "l"}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"c", "=", " ", 
   RowBox[{"-", 
    FractionBox["l", "\[Lambda]"]}]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.6623120601846547`*^9, 3.6623121133452244`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Times\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"c\\\", \\\" \\\", SuperscriptBox[\\\"\[Lambda]\
\\\", \\\"2\\\"]}]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6627408244020042`*^9, 3.6627410310878887`*^9}],

Cell[BoxData[
 RowBox[{"l", " ", "\[Lambda]"}]], "Output",
 CellChangeTimes->{3.66274082440309*^9, 3.662741031089273*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["l", "\[Lambda]"]}]], "Output",
 CellChangeTimes->{3.66274082440309*^9, 3.662741031090251*^9}]
}, Open  ]],

Cell["So the general solution is: ", "Text",
 CellChangeTimes->{{3.66231215075595*^9, 3.6623121680819306`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Omega]", "2"], "=", 
   RowBox[{
    RowBox[{"a", " ", "sin", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", " ", "t"}], ")"}]}], "+", 
    RowBox[{"b", " ", "cos", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", " ", "t"}], ")"}]}], "-", 
    FractionBox["l", "\[Lambda]"]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.662312172064871*^9, 3.662312240519576*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["l", "\[Lambda]"]}], "+", 
  RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
  RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{3.6627408245123253`*^9, 3.6627410311085567`*^9}]
}, Open  ]],

Cell[TextData[{
 "Now we can differentiate when ",
 StyleBox["t=0",
  FontSlant->"Italic"],
 " and plug into the ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["\[Omega]", "2"], "."], TraditionalForm]]],
 " equation:"
}], "Text",
 CellChangeTimes->{{3.6623858652023773`*^9, 3.6623858663374043`*^9}, {
  3.662386049550913*^9, 3.6623860503236427`*^9}, {3.662387704530642*^9, 
  3.662387762051553*^9}, {3.662387886128344*^9, 3.662387889659686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{
   OverscriptBox[
    SubscriptBox["\[Omega]", "2"], "."], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "cos", " ", 
      RowBox[{"(", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"t", "(", "0", ")"}]}], ")"}]}], "-", 
     RowBox[{"b", " ", "sin", " ", 
      RowBox[{"(", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"t", "(", "0", ")"}]}], ")"}]}]}], "=", 
    RowBox[{
     RowBox[{"-", "\[Lambda]"}], " ", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "(", "0", ")"}]}]}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{"a", "=", 
   RowBox[{
    RowBox[{"-", "\[Lambda]"}], " ", 
    RowBox[{
     SubscriptBox["\[Omega]", "1"], "(", "0", ")"}]}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "2"], "(", "0", ")"}], "=", 
   RowBox[{
    RowBox[{"b", " ", "cos", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", " ", 
       RowBox[{"t", "(", "0", ")"}]}], ")"}]}], "-", 
    FractionBox["l", "\[Lambda]"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "\[Lambda]"}], ")"}], " ", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "(", "0", ")"}], " ", "sin", " ", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", " ", 
       RowBox[{"t", "(", "0", ")"}]}], ")"}]}]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"b", "=", 
   RowBox[{
    FractionBox["l", "\[Lambda]"], "+", 
    RowBox[{
     SubscriptBox["\[Omega]", "2"], "(", "0", ")"}]}]}], 
  TraditionalForm]}], "Input",
 CellChangeTimes->{{3.662387807064303*^9, 3.662387860661508*^9}, {
   3.6623878968318167`*^9, 3.662387956555851*^9}, {3.6623882677620564`*^9, 
   3.662388325000401*^9}, {3.6623883809309587`*^9, 3.66238838251551*^9}, {
   3.662388501181272*^9, 3.662388521426502*^9}, {3.66238858907889*^9, 
   3.662388602715826*^9}, 3.6623891381667852`*^9, {3.662389400993991*^9, 
   3.662389404057724*^9}, {3.6623994493613243`*^9, 3.662399513332011*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(\\*RowBox[{\\\"Plus\\\"}]\\)\[NoBreak] \
in \[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"a\\\", \\\" \\\", \\\"cos\\\", \\\" \
\\\", \\\"\[Lambda]\\\", \\\" \\\", RowBox[{\\\"t\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"b\\\", \\\" \\\", \\\"sin\\\", \\\" \
\\\", \\\"\[Lambda]\\\", \\\" \\\", RowBox[{\\\"t\\\", \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}]}]}]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6627408246533527`*^9, 3.6627410311785383`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Lambda]"}], " ", 
  RowBox[{
   SubscriptBox["\[Omega]", "1"], "[", "0", "]"}]}]], "Output",
 CellChangeTimes->{3.662740824654737*^9, 3.662741031180004*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Lambda]"}], " ", 
  RowBox[{
   SubscriptBox["\[Omega]", "1"], "[", "0", "]"}]}]], "Output",
 CellChangeTimes->{3.662740824654737*^9, 3.662741031180925*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(\\*RowBox[{\\\"Plus\\\"}]\\)\[NoBreak] \
in \[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \
FractionBox[\\\"l\\\", \\\"\[Lambda]\\\"]}], \\\"+\\\", RowBox[{\\\"b\\\", \\\
\" \\\", \\\"cos\\\", \\\" \\\", \\\"t\\\", \\\" \\\", \\\"\[Lambda]\\\"}], \
\\\"-\\\", RowBox[{\\\"sin\\\", \\\" \\\", \\\"t\\\", \\\" \\\", \
SuperscriptBox[\\\"\[Lambda]\\\", \\\"2\\\"], \\\" \\\", \
RowBox[{SubscriptBox[\\\"\[Omega]\\\", \\\"1\\\"], \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}]}]}], \\\")\\\"}], \\\"[\\\", \\\"0\\\", \\\"]\\\"}]\\)\[NoBreak] \
is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6627408246533527`*^9, 3.662741031218176*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["l", "\[Lambda]"]}], "+", 
  RowBox[{"b", " ", "cos", " ", "\[Lambda]", " ", 
   RowBox[{"t", "[", "0", "]"}]}], "-", 
  RowBox[{"sin", " ", 
   SuperscriptBox["\[Lambda]", "2"], " ", 
   RowBox[{"t", "[", "0", "]"}], " ", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "[", "0", "]"}]}]}]], "Output",
 CellChangeTimes->{3.662740824654737*^9, 3.662741031219307*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim2"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1024\\\"}]\\)\[NoBreak] exceeded during \
evaluation of \[NoBreak]\\!\\(\\*FractionBox[\\\"l\\\", \\\"\[Lambda]\\\"]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/$RecursionLimit\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim2\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6627408246533527`*^9, 3.6627410312786913`*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   FractionBox["l", "\[Lambda]"], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["l", "\[Lambda]"]}], "+", 
      RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "-", 
      RowBox[{"sin", " ", "t", " ", 
       SuperscriptBox["\[Lambda]", "2"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "[", "0", "]"}]}]}], ")"}], "[", "0", 
    "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.662740824654737*^9, 3.662741031279954*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Orientation Angles Solution", "Section",
 CellChangeTimes->{{3.662389347918091*^9, 3.662389361962215*^9}, {
  3.662389406688549*^9, 3.662389446879636*^9}}],

Cell["\<\
Using a 1-2-3 (\[Alpha] , \[Beta], \[Gamma]) rotation sequence, we get the \
following attitude kinematics matrix:\
\>", "Text",
 CellChangeTimes->{{3.662389472971756*^9, 3.662389513091877*^9}, {
  3.6623967404964943`*^9, 3.662396747456756*^9}, {3.662397978111465*^9, 
  3.6623979960426073`*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       OverscriptBox["\[Alpha]", "."]},
      {GridBox[{
         {
          OverscriptBox["\[Beta]", "."]},
         {
          OverscriptBox["\[Gamma]", "."]}
        }]}
     }], "\[NoBreak]", ")"}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Cos", "[", "\[Beta]", "]"}]], " ", 
    RowBox[{"(", "\[NoBreak]\[NoBreak]", 
     RowBox[{GridBox[{
        {
         RowBox[{"Cos", "[", "\[Gamma]", "]"}]},
        {GridBox[{
           {
            RowBox[{
             RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Gamma]", "]"}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "  ", 
             RowBox[{"Cos", "[", "\[Gamma]", "]"}]}]}
          }]}
       }], GridBox[{
        {
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], "0"},
        {GridBox[{
           {
            RowBox[{
             RowBox[{"Cos", "[", "\[Gamma]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Beta]", "]"}]}]},
           {
            RowBox[{
             RowBox[{"Sin", "[", "\[Gamma]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}
          }], GridBox[{
           {"0"},
           {
            RowBox[{"Cos", "[", "\[Beta]", "]"}]}
          }]}
       }]}], ")"}], 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {GridBox[{
          {
           SubscriptBox["\[Omega]", "1"]},
          {
           SubscriptBox["\[Omega]", "2"]}
         }]},
       {
        SubscriptBox["\[Omega]", "3"]}
      }], "\[NoBreak]", ")"}]}]}], "Text"]], "Text",
 CellChangeTimes->{{3.662396782127874*^9, 3.662396822030678*^9}, {
  3.6623980749757833`*^9, 3.6623981807609863`*^9}, {3.6623983238655167`*^9, 
  3.6623983362108507`*^9}, {3.662472785774206*^9, 3.662472908294573*^9}, {
  3.662472946652348*^9, 3.662473003160919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"R1", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0"},
       {"0", 
        RowBox[{"cos", "(", "\[Alpha]", ")"}], 
        RowBox[{"sin", "(", "\[Alpha]", ")"}]},
       {"0", 
        RowBox[{"-", 
         RowBox[{"sin", "(", "\[Alpha]", ")"}]}], 
        RowBox[{"cos", "(", "\[Alpha]", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";"}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{"R2", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"cos", "(", "\[Beta]", ")"}], "0", 
        RowBox[{"-", 
         RowBox[{"sin", "(", "\[Beta]", ")"}]}]},
       {"0", "1", "0"},
       {
        RowBox[{"sin", "(", "\[Beta]", ")"}], "0", 
        RowBox[{"cos", "(", "\[Beta]", ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";"}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{"R3", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"cos", "(", "\[Gamma]", ")"}], 
        RowBox[{"sin", "(", "\[Gamma]", ")"}], "0"},
       {
        RowBox[{"-", 
         RowBox[{"sin", "(", "\[Gamma]", ")"}]}], 
        RowBox[{"cos", "(", "\[Gamma]", ")"}], "0"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";"}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{"\[Omega]", "=", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], ",", 
      SubscriptBox["\[Omega]", "2"], ",", 
      SubscriptBox["\[Omega]", "3"]}], "}"}]}], ";"}], 
  TraditionalForm]}], "Input",
 CellChangeTimes->{{3.6624002757402353`*^9, 3.662400349067512*^9}, {
  3.662400476139235*^9, 3.662400552503593*^9}, {3.662400675843627*^9, 
  3.6624007098351*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim2"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1024\\\"}]\\)\[NoBreak] exceeded during \
evaluation of \[NoBreak]\\!\\(\\*FractionBox[\\\"l\\\", \\\"\[Lambda]\\\"]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/$RecursionLimit\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim2\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662740824889429*^9, 3.662741031354499*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      SubscriptBox["\[Omega]", "3"]}], "}"}], "+", 
    RowBox[{"R3", ".", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SubscriptBox["\[Omega]", "2"], ",", "0"}], "}"}]}], "+", 
    RowBox[{"R3", ".", "R2", ".", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Omega]", "1"], ",", "0", ",", "0"}], "}"}]}]}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.662400722036257*^9, 3.662400780802046*^9}, {
  3.662400863036743*^9, 3.6624009638926897`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim2"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1024\\\"}]\\)\[NoBreak] exceeded during \
evaluation of \[NoBreak]\\!\\(\\*FractionBox[\\\"l\\\", \\\"\[Lambda]\\\"]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/$RecursionLimit\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim2\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6627408250449543`*^9, 3.662741031423708*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"A", "=", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       SubscriptBox["\[Omega]", "3"]}], "}"}], "+", 
     RowBox[{"R3", ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        SubscriptBox["\[Omega]", "2"], ",", "0"}], "}"}]}], "+", 
     RowBox[{"R3", ".", "R2", ".", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[Omega]", "1"], ",", "0", ",", "0"}], "}"}]}]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]], "Output",
 CellChangeTimes->{{3.6624009493354692`*^9, 3.662400964251539*^9}, 
   3.662474626576029*^9, 3.662740825096408*^9, 3.662741031425172*^9}]
}, Open  ]],

Cell[TextData[{
 "Notice that ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Gamma]", "."], TraditionalForm]]],
 " can be simplified in the following way: "
}], "Text",
 CellChangeTimes->{{3.662473038295195*^9, 3.662473073930543*^9}, {
  3.662474137454748*^9, 3.6624743836033773`*^9}, {3.662474640090214*^9, 
  3.662474645866618*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["\[Gamma]", "."], "=", 
   RowBox[{"n", "-", 
    RowBox[{
     RowBox[{"tan", "(", "\[Beta]", ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "1"], " ", 
        RowBox[{"cos", "(", "\[Gamma]", ")"}]}], "-", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], " ", 
        RowBox[{"sin", "(", "\[Gamma]", ")"}]}]}], ")"}]}]}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.662473038295195*^9, 3.662473073930543*^9}, {
  3.662474137454748*^9, 3.6624743836033773`*^9}, {3.662474640090214*^9, 
  3.6624746656210537`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim2"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1024\\\"}]\\)\[NoBreak] exceeded during \
evaluation of \[NoBreak]\\!\\(\\*FractionBox[\\\"l\\\", \\\"\[Lambda]\\\"]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/$RecursionLimit\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim2\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662740825383068*^9, 3.6627410314925632`*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   OverscriptBox["\[Gamma]", "."], "=", 
   RowBox[{"n", "-", 
    RowBox[{
     RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "1"], " ", 
        RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], "-", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], " ", 
        RowBox[{"Sin", "[", "\[Gamma]", "]"}]}]}], ")"}]}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.662740825384138*^9, 3.6627410314940968`*^9}]
}, Open  ]],

Cell[TextData[{
 "Substituting for ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Alpha]", "."], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in the equation above:"
}], "Text",
 CellChangeTimes->{{3.662473038295195*^9, 3.662473073930543*^9}, {
  3.662474137454748*^9, 3.6624743836033773`*^9}, {3.662474640090214*^9, 
  3.662474697229618*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox["\[Gamma]", "."], "=", 
   RowBox[{"n", "-", 
    RowBox[{
     OverscriptBox["\[Alpha]", "."], " ", 
     RowBox[{"sin", "(", "\[Beta]", ")"}]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.662473038295195*^9, 3.662473073930543*^9}, {
  3.662474137454748*^9, 3.6624743836033773`*^9}, {3.662474640090214*^9, 
  3.662474685823099*^9}}],

Cell[BoxData[
 RowBox[{"n", "-", 
  RowBox[{
   OverscriptBox["\[Alpha]", "."], " ", 
   RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.662740825494438*^9, 3.6627410315134077`*^9}]
}, Open  ]],

Cell["\<\
Since we have a prolate body, we can approximate the orientation angles \
solution with small angle approximations, where Cos[\[Beta]] \[TildeTilde] 1 \
and Sin[\[Beta]] \[TildeTilde] \[Beta]: \
\>", "Text",
 CellChangeTimes->{{3.662473038295195*^9, 3.662473073930543*^9}, {
  3.662474137454748*^9, 3.6624743836033773`*^9}, {3.662474640090214*^9, 
  3.662474705200899*^9}}],

Cell[BoxData["\[Therefore]"], "Input",
 CellChangeTimes->{{3.662474388177948*^9, 3.662474388977253*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{
   OverscriptBox["\[Alpha]", "."], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "1"], " ", 
     RowBox[{"cos", "(", "\[Gamma]", ")"}]}], "-", 
    RowBox[{
     SubscriptBox["\[Omega]", "2"], " ", 
     RowBox[{"sin", "(", "\[Gamma]", ")"}]}]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   OverscriptBox["\[Beta]", "."], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "1"], " ", 
     RowBox[{"sin", "(", "\[Gamma]", ")"}]}], "+", 
    RowBox[{
     SubscriptBox["\[Omega]", "2"], " ", 
     RowBox[{"cos", "(", "\[Gamma]", ")"}]}]}]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.662474395112152*^9, 3.6624744240728903`*^9}, {
   3.662474476082323*^9, 3.662474526692389*^9}, 3.6624746220354757`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim2"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1024\\\"}]\\)\[NoBreak] exceeded during \
evaluation of \[NoBreak]\\!\\(\\*FractionBox[\\\"l\\\", \\\"\[Lambda]\\\"]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/$RecursionLimit\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim2\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662740825757707*^9, 3.662741031629274*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   OverscriptBox["\[Alpha]", "."], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "1"], " ", 
     RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], "-", 
    RowBox[{
     SubscriptBox["\[Omega]", "2"], " ", 
     RowBox[{"Sin", "[", "\[Gamma]", "]"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.662740825758753*^9, 3.662741031630835*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim2"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1024\\\"}]\\)\[NoBreak] exceeded during \
evaluation of \[NoBreak]\\!\\(\\*FractionBox[\\\"l\\\", \\\"\[Lambda]\\\"]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/$RecursionLimit\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim2\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662740825757707*^9, 3.662741031690517*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   OverscriptBox["\[Beta]", "."], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", "1"], " ", 
     RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], "+", 
    RowBox[{
     SubscriptBox["\[Omega]", "2"], " ", 
     RowBox[{"Cos", "[", "\[Gamma]", "]"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.662740825758753*^9, 3.6627410316920357`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.662474267158835*^9, 3.662474268964799*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Matlab numerical Integration", "Subsubsection",
 CellChangeTimes->{{3.662580432726356*^9, 3.662580439579711*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"y", "=", 
  RowBox[{
  "Import", "[", "\"\</home/mau/workspace/y.mat\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\</home/mau/workspace/t.mat\>\"", "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.66257371845128*^9, 3.662573739228736*^9}, {
   3.662573770276351*^9, 3.662573784333959*^9}, {3.6625738440002413`*^9, 
   3.662573886251045*^9}, 3.6625740917979107`*^9, 3.662579220547553*^9, {
   3.662660089419257*^9, 3.662660094550411*^9}, {3.66266013018289*^9, 
   3.662660156296789*^9}, 3.662662323801022*^9, {3.662663782938725*^9, 
   3.662663783270054*^9}, 3.6626638251951437`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
              "5.`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "0.000025097390381568577`", ",", "6.990641992652986`*^-7", ",", 
              "0.07924465953743529`", ",", "0.0031668306694045962`", ",", 
              RowBox[{"-", "0.00011924956804433378`"}], ",", "5.`"}], "}"}], 
            ",", 
            TemplateBox[{"1414"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.12437571896063493`"}], ",", 
              "0.16708333585679036`", ",", "150.108698181666`", ",", 
              RowBox[{"-", "0.0380423070331807`"}], ",", 
              RowBox[{"-", "0.06011639799113475`"}], ",", "5.`"}], "}"}]}], 
           "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{74., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 110, 31544286429409768326, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 110, 31544286429409768326, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 110, 31544286429409768326, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{100., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[110]]], "Output",
 CellChangeTimes->{
  3.662579221957027*^9, 3.662580420983292*^9, 3.662660033961588*^9, {
   3.662660135044847*^9, 3.662660158043086*^9}, 3.662662324374095*^9, 
   3.662663828580525*^9, 3.662740826156187*^9, 3.662741031827003*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"y1", "=", " ", 
   RowBox[{"y", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662574390107502*^9, 3.66257441288208*^9}, {
  3.662579099768759*^9, 3.662579194148571*^9}, {3.662579273489534*^9, 
  3.66257927821033*^9}, {3.662579350499259*^9, 3.662579356076068*^9}, {
  3.6625794173193417`*^9, 3.662579427356887*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]num", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"y1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]num", "=", "     ", 
   RowBox[{"y1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]1num", "=", " ", 
   RowBox[{"y1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]2num", "=", " ", 
   RowBox[{"y1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662574390107502*^9, 3.66257441288208*^9}, {
   3.662579099768759*^9, 3.662579194148571*^9}, {3.662579273489534*^9, 
   3.66257927821033*^9}, {3.662579350499259*^9, 3.662579356076068*^9}, {
   3.6625794173193417`*^9, 3.662579465292255*^9}, 3.662660059532617*^9, {
   3.662663046652524*^9, 3.6626630711005983`*^9}, 3.662740872507086*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alplot", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "\[Alpha]num"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beplot", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "\[Beta]num"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ome1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "\[Omega]1num"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ome2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "\[Omega]2num"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662660020015456*^9, 3.6626600271014*^9}, {
  3.662660182555757*^9, 3.6626602021876907`*^9}, {3.6626619066998262`*^9, 
  3.662661921333077*^9}, {3.662661981059473*^9, 3.662661984449545*^9}, {
  3.662662026124929*^9, 3.6626621047674427`*^9}, {3.662663003279001*^9, 
  3.66266300781844*^9}, {3.662663199924449*^9, 3.662663216757661*^9}, {
  3.662663247012431*^9, 3.662663302795491*^9}, {3.662663787056636*^9, 
  3.662663794528307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "alplot", "]"}]], "Input",
 CellChangeTimes->{{3.662580353968563*^9, 3.662580375001095*^9}, {
  3.662663308840111*^9, 3.662663309622143*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
OsCzhfl55O1GlF/QW4YiHQi+v+L8xYXw0/AA69MyHXA0Xu2dPEfUu3dF6ks1
4ffUn/jDhxuxmGbbw5MNOuDnwHs4YWcjbvNiXe9vJfzvFo76qtmIDb+HHPd0
6wDXzKuPskKNuPdaxrvafh14f6XjlsFGA4adf3TuyHsdCP/9XdrhYwO2Hb6x
8GNUB9ylPMuMKxuQ2fyEd+C0DmzJifB7F9WA5gY7WcW+6QCzKN/LrVcacOOv
Wb/HvA44uCZ6n9/ZgIUNe571/SL8PnItb0ywAR1D91/QXNMB8asLYe++1KOE
lY1m2D8d2Dr3x/HOm3p8EavROcqgCwoid1323a1H5UnmS7qsBKYfdd2zvx5z
1aa3hHDpgtOOoYYSoXrUvYEvP/Drwh6Z40KDY3VYadP245ioLnCEfWPa9bIO
d5L6yYNSuiAh+G19zamOuL999D6koAvbjGSbrTXr8ODs56ZeVV3I9c/dm7RY
ix7BiUr2JF04cdPKJ/JNLcbK2YZ+J+vC1cl2FfKdWqxEjtnbRrpgVrg1ehxq
cdSuyXKLsS7sKome+LalFnnUaz/bm+mCtaz5v8MvEU03KvzK9upCbHuD1d0d
iDc7S0R5DuhCnIuu+MeRGnz1LL/YyVYX/rkn/nvnXYPutjwHau10QYaVSeiP
fA0acrv/EDyjC+Fdomw3equRvr0v9IqDLhz8F3Ep5m41dtzVVWy8rAuOQY6M
cUbV6HnserOFmy4I7xTXCfpdhapaJQ5dHroQzyvHQVtRhcMMK0w2XrpwTnw1
iOduFYYO62e88yf8uShIybapQqYu+Wm7YF04JGJomKtchYHIKzPxQBfYBQb2
zDJUIV0hzSmHSF2gllI7pb5Uom/aXPxsjC6cWl0YWOmuxPArVrnGzwk99JsL
MVWVmKyfXxfzgsgXc/NgcW4l5v/jHviRoQveNIrv3qVVYm2r29edObqgI3k2
2jexEt9cy1t/VqgL+oxOqXIJlfha8gfnSqkudAnO+evFE/naVGWtqnWhzaLp
hgixHn3dkZxZrwul2wJkyc8rcThv8K1eqy6w7v9jSZtciRKzZpfqunRB+uLb
n2UvKvG04huG/f26cKX6VWkGUT/tjELS8BDhR/HRHeIvK3G8OcD36KguFNYt
8bulVqK4+rj9uyldmGaXrtiSVInHIrbDoRldeGq1fa95TCVGrcRL980R+Ow1
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
LzHA1Hwsc+k+xv//dVgF2gjT4wKdGP8PSSVFkw==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 30.}, {-0.333302830271398, 0.016397346450937045`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6625803753066263`*^9, 3.66258042117662*^9, 
  3.662663310745513*^9, 3.662663828850583*^9, 3.6627408269517927`*^9, 
  3.662741031887713*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["equation that Hurtado gave:", "Subsubsection",
 CellChangeTimes->{{3.662579571752063*^9, 3.662579579469736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]Hur", "=", 
  RowBox[{
   RowBox[{
    FractionBox["l", 
     RowBox[{"\[Lambda]", " ", "n", " "}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "t"}], "]"}]}], ")"}]}], " ", "-", " ", 
   RowBox[{"l", " ", 
    FractionBox["It", 
     RowBox[{"\[Lambda]", " ", "Ia", " ", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["Ia", "It"], " ", "n", " ", "t"}], " ", "]"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.662579800155246*^9, 3.662579873869974*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"l", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "t"}], "]"}]}], ")"}]}], 
   RowBox[{"n", " ", "\[Lambda]"}]], "-", 
  FractionBox[
   RowBox[{"It", " ", "l", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"Ia", " ", "n", " ", "t"}], "It"], "]"}]}], ")"}]}], 
   RowBox[{"Ia", " ", "n", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{3.662579877013957*^9, 3.6627408270722933`*^9, 
  3.662741031898312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alpha1", "=", 
  RowBox[{"\[Alpha]Hur", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"It", "-", "Ia"}], "It"], " ", "n"}]}], ",", 
     RowBox[{"l", "\[Rule]", "0.2"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.662579885696574*^9, 3.662579932414467*^9}, {
  3.662580097294438*^9, 3.6625800979375563`*^9}, {3.662580205665491*^9, 
  3.662580211919805*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"0.2`", " ", "It", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "t"}], "]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", 
    SuperscriptBox["n", "2"]}]], "-", 
  FractionBox[
   RowBox[{"0.2`", " ", 
    SuperscriptBox["It", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"Ia", " ", "n", " ", "t"}], "It"], "]"}]}], ")"}]}], 
   RowBox[{"Ia", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", 
    SuperscriptBox["n", "2"]}]]}]], "Output",
 CellChangeTimes->{3.662579938392119*^9, 3.662580098333459*^9, 
  3.6625802330732727`*^9, 3.662740827197144*^9, 3.66274103191919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alphaHurtado", "=", 
  RowBox[{"alpha1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"It", "\[Rule]", "1"}], ",", 
     RowBox[{"Ia", "\[Rule]", "0.05"}], ",", 
     RowBox[{"n", "\[Rule]", "5"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.662579950194037*^9, 3.66257996268587*^9}, {
  3.662580103245976*^9, 3.662580130446753*^9}, {3.662580171260981*^9, 
  3.6625801745801992`*^9}, {3.662580215833191*^9, 3.662580229681756*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "0.16842105263157894`"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.25`", " ", "t"}], "]"}]}], ")"}]}], "+", 
  RowBox[{"0.008421052631578947`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"Cos", "[", 
      RowBox[{"5", " ", "t"}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6625801770517483`*^9, 3.662580237303227*^9, 
  3.662740827309973*^9, 3.6627410319412613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"alphaHurtado", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662580242997559*^9, 3.662580262176515*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUl3c81f8Xx2Wn7E3Wda17ZScjPocKITOK7FAqsiJCRgMhpSRkFJKvyopk
vFFUXPuiQdlEWSEj/D6/v+7j+fic836f8zrv93mfK+F2ycqDloaGZoqZhub/
v6vfP70n3s7Tld6cyWsVkNJZP6x8Ue9zNKbXfJ69oWFE1+PtlI3A53vY/YHD
gzN1u7COnsoV9iOZWN5hHdv2BW4sY6Wple7zEyz89eL0s3IJrCuqKH0n8Rmm
U6Lwui+TjNGz3Tu/ebgYW9k8d4U4oIrtaz/0eDOsBEtWTL9/Z0ELU09RurE+
UIaNRVTfN7+th1nYEb3/qrzGKm7amtgSDLDzYgI2K4lVmOdP4K7TMsGuT+zR
+TNdjTH+IIa0n7PAsv/bIS4ersUC3xxT/uFnjb31+7N3PqseKzGpvzlQaYvN
ZASEroY1YCdPBvYPHLDH6N3Oui0PNGGeDD96p365YJxHXW0DGN5jbMdUolW3
3DBR2dPGSyrNWKOInAZR2gPTmDNTWUj8gInXdOss1Xph3qHqtL8OU7ATriP2
8r/8sFBHpdXzfu2Y35RZlMyRACwWSDM/szow6SGXw31PAjFLOvaff8K6sCa1
mGRBv2Dswifa7sWBHuzlLLPNUa1wbOntjnGpTy9WMkmTulISgV0p/vfel4GK
JXaQI79wR2I376y+mVfpw7pbLahLsVFYjs1Mzu/EAczS92X0I5frmLThlNAL
4meMZZ+hmALHDeyFxvj9izWfMZV4hQ8etTewt8LfY2env2CSTzVpJHbfwqgj
3b4/Dw9itfd60My5OMy+t2Om8Osgdr3CvbZ0KQ4bed/mfs5vCFOfOJ4rHBSP
nav8+F2G+TtmIqzUQl2Kx+aeNZ+ayvqOGT85Nppw7jYW+Kipp+DAD4xB8u/B
v/23sc14ZOpJ+YFxOhrXt+okYHq6TmP3lIex1d3ZRk2ZCRh9lUPOUtgwxhYi
UJz5JwH7oHja0erjMLbrwZ/RffqJWHyhnVAZ9whWpJS+nyU2ETOTODXA6TyC
VZR4KCs1J2Kc6bb3/YpGsPqzNLzO64kYlcvGsntlBPt71Db9AjEJS7ttzaas
N4pxdDCqKxokYafprdqSE0YxxccmxFinJEw03CJ2YWAU01AxumrnnYTRjE1b
PZMbw1ZeqIrE+ydho0ZRIk5Xx7DTTDbO1heTsPcvBad52sewpJlxhTz7JCyf
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
KTWmgq8pKNQt8W5/vyhEO4QpD1VR0EpqL2F5WBTMb63ayb+lIN82wQrOWVEo
3hVjxFpLQb92nI8qrojC5J4LTTfrKOisWkG/6Y4okHeK2rLrKWj03K+z53eL
wZnXiU+cEQU5PVZZv8UtBvlxkjXtOH/pvhKfLyIG3C0P3y7ifIIRCb+TEQMD
r7P+vTh3aTG8GFYWg90Q9i0UZ5NLJrrb2mLA6abIuYCv3/L0bqewgRj8VVA3
1cZZ//OAi6aFGKyuhg254/HU7RVdsrUXg/IbS7KX8XgrLhfx3PMRg0jGZ3UX
8HwUixbyX10RA8PzHttu1RRU9F39YHu0GJgLlA+5vaEgae7wjzMJYmCrYdoZ
gOuRa/jOjvmhGOzvVNDKqqSgfWG7Z6VyxeDhrVMBM7h+aSXmYYf/E4OL1Xfe
uODMPfGA1fW1GOQtaJF345wkOJgVgcSgTd64bbaCglbbWKbnPoqB2c3Blj34
d6cITWXnHjFwHm4Nv4Bzi9K50M5vYrBAtWThxPfbP5b6DpvA999id6bF47n/
oHlvyZwYOG18OHwUj/ef4bKN+JoY2FM0rX7g+aiE3zX/SCMOK2TeP301FOTZ
LxsYySAOnvcYTyvgeqUrNqRpsIiDeuzwrd8NFNQRe7JugU0c4ltGdQTeUxDt
6NxIIbc4/M4XZyj/QEHq2jcZXQXEgXiEWaapjYLO3xchC4qIQ2D1nuJjXRSU
9bvCvFtCHIKeeNsd76OgHgPTwDhpcdBTVnnV9ZWCGHPG0vTI4rAxdmCyf5iC
tNZD69YVxWHf7Pk5tykK8rHiGi1VE4cjarrewXMU9OS/54znNcVhcY1Yy7dK
Qf30emSCrjgUpVtP6W9TEIvTZ/Ov+uJw7VpW8RZjO9KtuhR4z1AchuNvhBpx
tKMCr6w6Wktx8NVfPnWP2I6+Nh0YfWsjDtSK9PJ7iu2IbV87Y4C9ODgJnCmS
0m5HQR2b5mNnxKE1AkXSnmhHBqp2o++CxEGs2Dr7WkI7Ck1YYAy7ittvWvza
zmhHLydukdUixeGXel43Y3E74kurDMyLE4eweM6U/PZ2NPmPm+lGpjicvH5c
7R1fBxKy/Y+skysO+n0zxftJHcjslb7FSj6uhzZhgk63A1W6+j3yeCUOocYN
x4c9O9DNlg6yQROu/8ELW821HeitmKfFdos4zFm6K271dKC5K1uBlW3ioLar
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
PYKsf22UfAqVnMe2Vho1mswf99+GCNVsXPm7SCg5lgX6hvIM25XZWKyU0P4r
ngU/jvxsEFuUjRvN3a9aJ7LAjmpw59x0Fnaf2XGsOokFOl+XyzYNZ+HRazTO
2hQWNP1du72lOwv/tkrPC0llwd3Ik4tjarIwbvKHYCCNBd4Utx3COVmooPQi
2yidBZ3ui45rR2ah0ZlUvUXXWDC0zmxJtkkW5tw0kHLIYcFMsfTDq6pZKPzi
62DVTRY88ZANdBTJwlqGyXmnQha8Uh43GHLKxFUOPx2wiAUDcSYK4dKZ6JOU
zZUpYYGIWaH6aGUGMib+vH98h5ynTtF/e/6m4wXFm/fk75H16g7nhSan49ft
O2NPVpLxP35Z36qRjoW3C5hra0l/XxG6J2V2FZVcbSN9m1gwYruwpMchDYOu
iu3vfMoCFi20YO2Hy9jXUk5Va2XB33klZyIPXMZUjYVvnnew4D8lv6oj5qm4
ZKhai/qaBbfe/ejbsDQFpw+tEXwaJfXa3p6TbJmINheac/XHWbAuRCrnT9V5
vPfQ6+zFbyxQqF5mn6J4Hk8pPFPZ/IvkXy9+T3p/HA73BXpn/GPBpzN3XyjT
o9Bwkab5zzls4AlvUJdbEok5uj2KZqJs+HvsjdOTsXC0u0Jp+TOfDfM8lY4P
VIXiC6t3q3dLsWHsaNR39/NByIiMmyhcxgaW7/sqM/VAvHCP2yQsywaJ/Q0t
7/X90VzmgnvJSnJ9/q+I6SQfLNiiv0VsDRvWD8kF5nSfwfmeI3IHFNjAWbbi
Nip7Yb1g0+MFKmy4v4xjYPDzFCqJjF86pMoGzeVKXkleJzGQdsWlUp0NlMHJ
fwri7thrb7RxqSYbjK90RCTbuCIv8fvyo9ps8BYhdjc1HsPUusyRGgobvjpe
G3Xf64S/xrfiMjob8l5vZS5f5IilFjlOj9gkNl3fMjtkj97mNT+38tigUHzd
his4iPpmL0Ke67Jhu1vmy8va+3Du1vElBwk29L/g7/EYsMJWk/npQxvJevr8
bn34sRsvGCtqnDJgA+w4uaHr4C60NuLdmzJkw/m2yNvjyjtQwXCXQZgJG+zG
1tx0jbDAQQOXzsVmJPa6EdbjtRVvbQ47kGrBBqFGE2d9GRP02JTxWXEHG4JE
f8/uOmyEvI33vAt3sSFr3aX8I7aGKAQdc5l7yPVJxkzrqS3YqD98odaKjLdA
qfU2YYhxesIKxrZkva/Xa0QqG6Gl7sqizv1kPSprlmTfMEZ5PoNna8eGkqvV
o7a1ptjPNW8aOET2n3DqGTqbYy7H0dLtCMnfb1HQ37Ed3diB7yaPknztXTzm
Rd2JDFaqW/AxMv6+nNKEnZY4xSidknBlwwpTj6mjpXvwEb05MvkEGc/2+0CV
qTVuo05fyz1N6jO49J702oMoQ1lOoZ5hQyxrMtxL3R57tbVrqnzYUJ/uTPN6
dQiPadq9bAtgQ6v4g54xD0cMVa1f8COSXN/4QtXCxg1N1/el+sewwbFauf4A
yx0lVX6piMWz4fVW7e0nNp3EDCU1kE9iQ8fIuHvnAQ+sXB17GtLZ0F5240x2
9BkMWnVjTnMmG35kVZ69E+uNhitr43ddY8P7pBaD9VE+2L3ia55jLhumy9TN
V7v6YZqsOOtrPhtM/uU1F+w8i/YySo99brHBrPPcozxtfxyTtuyLLWXDUMKI
19bGALwj5XpM5g4bvlvVBmgFBaKfZPhkZgUbqtNiX/nLBOGmpZmh6pVssD15
89OPI0E4f8l9yfIHbNDP3O4pXxyEzxZ1ZujWknzSAv8kjgVhysKRDY11bNAq
K18qqhqM+xaIVG57TPKhPVu+Zm8wrpNYZfiqgZzXo5kuFwOCcWQ+U3DoCRvW
pW8IVUwPxhIxC7vRZjbcbF9CDSkLxjPzjn7xbGODk9V+PFsbjPpzg3z/PSPn
3+7R3d66YBQVvSwW1UXy13Lpl0dlMLYIlyVLPWfDkbHxXvm8YLwwp0Xx6ks2
+D1O2l0SG4xWQgPFKq/Z0Pfpv+9yR4Mxbc3k8LleNgiru99q5AVjr66Eyvv/
2GD4On2P39xgXGO72g7esSGdwT5CawrCgz6UKxkfSP/uWuD1OTAIsy5tfjH9
kex38YadhTpB+P7uHknbITbkO9x6MXkrEJW7nc0qR8j6xDcU9QwFoOPE2QjZ
L2y4ISweqSgdgHlLzz/yHGeDTV7GJ1FNfxzRvj4j+MYGXeqL7Ug/i67Hn3qc
/8WGD4enMnqX+mJxVG/x2G82PN2iZTc86I1fc8eHzaZIvxy4G65QdAZPDyy3
ExfigPXkyK+mBZ5YIax+5agwBwzPGW3bcMMDfyvovmgQ5YB/k9uNDMop9Nt/
yCxEnAM9x/eGfSHcMORFMWdKigMfjobZ3v1gh4lPjCS/qHDgjkFCmNFPa6Jr
0MZsqxoHsoxi4qkf7Ihlc90i8jU4oC/04aNshwORujF55ogOB1LTRsr+3XYh
sqr6h//jcODWqFZ26QYv4n3Pd2U9Pge8rgTkzazwJpQn59ld0eMApbEqNGSO
L5FL13qxdxMH7q5iVnbW+RPFt3wedWzlgLF8bnCFewjxtTl2RtuCA8Kni52L
jM8RtOFMTtx2DmQU9r8XXxlK3FVpLDbZzYHX15LHQovCiF+bXw3n7iX7tTP7
8t0lnOAcGlWeZ8MBiXXFd51VIojqDKkrjw5wQOynxklKUCQxW63yQsGeA/y+
W6ZjilEEvOFIBh7mwLoCpQVxD6KIkD9bzfqOcGC1c8KeNrNo4rHswQi+Ewee
LVRXOf08mhBlnXp0+RjJZ9r1D6a7YwhDy7CZSRcO/J5ckLi2NYaIPJXK2XOC
A8G/FV/Xc2OJ5vOFHndOcsAMlWhSGbGEZ8CGo1tOk/w8mr9wsVAcoeBSaPPC
iwNPLu8zqtsTRzRbb7A46kM+Hx0bm38tjvA0Ktz4248DbrPGEs/ekeuZG5hR
ARxYRZQWCcnEE81KhWrywaReKblzk/TjCc+lG1YVnuOAz6Ku/SG28YTCbMES
3XAOUG12r+tyiSdaPmuItEWS+ndfeh97Kp7welXwa38MBziEO9STzxWaNEbG
4jjAqK8fO0/ub7lT0Bd4ntQjKPuqFEGuv6bRuTSJAw0tHe9OyJLrzxfUZ1/k
wK7jwutfDMQRLf4a92mpHHifknjOJzeO8DpeUPg4jQNHbk3fSD4YRyhaa2Ra
ppP7ZZRznBbFEa2GBRc+ZnLAttTphW5pLOHF0Aj3usaBjkv1eQe2xhKKSgU+
Yjc4cOD9lJNibwzRukTDNTWX7MdqruR/h2MIr5l8O/UCDojEtS36/j6aaO3J
N9p6mwMj1eaRlU+iiDON6vzeUg7MHHH+DJQoQulOvrbrHQ7sW+Y10HI+kjiT
kL88oZL03xC/v0k/glAyzP/Q9ZgDK8uIh6v2hRJtdPWXhxs50HJKWtvx8jnC
WzG/+ccTDlgRwxMPBCFE23ReqUw7BwYkf8tUbwwmvMvzAm16SP6nNL2Xq5wl
1mWreXx+zYE04t/8rQm+RHt8nuPZPg68iLre5jrtTaw7lmee8Z4Der/GV3R+
8CTaFfJWvh/lQIQIb0WMqDvhs1hticc4qf/QcL6TkSuhPJ0rLDrBAXuPMP7k
lWOEz8vcYZVJDkivjC8RTjhCKDeo9lX84YBjxge9b5TDRHtZbofRNAf+sdhC
M+N2hHJ87j3nOVxocdK6NpFiTbT7qRb+FeFCc0fOcc/nuwkf59yMmHlcKFz5
0OqU9U5Cea/qhVXiXHjmuvNSnKkF0W6QG1a0gAuyF8R5+l7GhA9N1Ud/MRd6
vrq7jHA3E8oKuS7PlnIhi2lA0aPpEe2LVO3spLnA060a+avFJHymbu76tpwL
J/WsV/7u0STGvnwz91rBBSrqefZKKhEO/brGU/JcuMS5q5mTKE286orYFLSa
C5m2SqdEFgkRFg1dunMVuFDlfd8tJb1H//G91exoJS70Ham0DhjM1OcUOFGX
qHCh2KioIc9sTL/oavmGZFUuZMyJXSUiLk4oJcyqyGlwQdj+wLc/pvLEpWAT
hQxNLpwQn9ciFL2eWHg6WX6dDhduDYrlP2dQiRDHt8vyqFzoahdzOXCAQ0xa
aSzRYnAhLLVtxOsAEC5bPcXLWFyY2L/bN1xlC/Fer06EzeVCyfFwSSLYlNhL
WTD7gM+FWJfvnKXs7USr0p7foM+FvOUJ8SqndxEbl2dPNAAX7Bc+3v/w5x6i
Qmx01HQzFxhblA+kVtoQWaPB7yyNuXDga+DE7wB7Yvnb1jevTLmwf7f6s9Dq
w0R0p+yLA+akPrTFKg3LHQnPiqJmp51ceFHk2rJ++XFiJO93/RdLLtRt0Vv4
754rYXdlM57ay4V9/HU9M2x3wjToVfnZfVxYzCqdXLbQg1hjOjf9vCMXDmXP
XblMwodI0t1+abkzF8wXDdy/fdGXmK9zJTHtOBeeCjq5cspniQlpaniOOxdK
rc0ua24JJJr69p2478uF3HeW331rQgjdjlxnPX8u1D/3iH0TeI4oezRx+FEg
Fx5lTlE9iVDiam6kVWsoF04vk/lgcieMcD95Z2N/POmXUfG7NxwjiY+H//GP
JHKh/FZJ63fRKMJmjylrJIkLV35ThW9cjSI6jC9STqRw4dPqmgtmWtHEFn6/
xo9ULhz+KlIfXBFNVGltUPG5QupfqKbSz44hKApea2fTuSBoFWkTK40hbkg9
lDuXxYWdO65cTFeMJeTnLlw2/zoXgoNuWm6NiiUSJvcsjrvBhTTm1NK6T7GE
6Ej2fKk8Lhw9/5hRohtH+PSOCl8q4ILy2L7q5xFxxFg7e2ZlEReYqx7bf30S
Rxx+GDKZdZsLc/pd6hv+xRE95W3fVMrI+uSD4xQ14wmLmytGC+5wQULe4vxz
83jicerhQZ17XKidGhusdIgn7hTkxUdVciHiVuEQ2z2eyKn+wvrwgJyfHh81
efL8Tm6nvdWt5UJ/YqPbtmPxRGj/mYiUOjLf2oizLVbxxOmJap2vj8j1rq8k
I/TiiSOiwj0mDVzYVTPxLXBFPLFHxijoehMXjI/YDNwfjiMM1WLVZp5yoUPU
vZxbGkeweJ0de1pJfb7qqS05EUesN5PxKWnngqF8msjWdXGEzAFbRYlOLrxV
v/xDpD2WEHPPenpYwAXXEavY3Sdiid/BH0/WPOfCvRtqOnZiscRQkoa8bM//
50FWxCQlhnhy786x5l4u9EpWKttfjibuP/0jpfyWnDfDa43fFkUT+W/0H/i/
40KCcO6idb5RRPS/Jwuog+Q86N7+bs2LJHwlF9+JHuLCZvsBoQ/xEcSxdbv2
DYyQ/r5ebyzdG05sNeq7dWmc1Gvmh0WafRiha620+9s3LizpoW64kBZKaB4/
OmP6gwtWN1arerSdIxYmfDOf/c2F+1JiR3YrhRDtL+aOOwjzYMNqP+6Aij9R
O2R6qVaUB+6Vhy4OmvoRxX8TiBViPNjLnPum1dmHSFgjf75lAQ+MZkbak1M9
ie2O2lTach6kHmQL7bl+nABvj1cxsjyY/+JS09WqowQ1+n7wRzke5PgEzKcJ
DhNSxZu6UtfwgPKtg6a0xooQ/Nzj8U+VByXP93CXzXCwXuzqSmsNMj/zJuWy
7la8I/fucZkmD1pvMjUC+i0xWe/4MkcqD9b4vNisHGyPodtKqpHOA4bj4lyR
MQf0tP/pIMfiwavoyquZhk64JyzwbiuPBwv+O3i35K4bGl6q379ejweLrdtH
WgbckZUvPi+I4MGoy5WTSw+dQtm2pD10Ax5cNp9JN2N44vy3PbOxhjy4e3Wo
hh3phb+/rs4dNOZBEuultW3bGexZljd52ZwHUXutZOLVfZH6y9pq/XYeWFjq
hsbs8cPolwsqy3by4HVMuZ+x+1kcuF8jR+zmAc1IKOywlz/qpZ3wbdnLg8Nc
N4NIpwBM8VN8s9eGB1Os4tsnDAPx6z4Bf2AfD5QmDq7+KhaEJvphV90P8mDz
qfWzew4F4bW17Jlpex7IErcd9pcF4ZTQ8P4oBx6cW6KtPDUZhJbv02qXH+XB
CdvrM9r0YCx+bLb2mjOZj3Uxa/ZwMIrdmA3UduFBwrtDuV7RwWgXXtJf5caD
J87MhIKbwVh19NBGo5M8WOd2ofDO/WCUNll2TeDBA5fx1OUV5P3FRaNR2M6L
B2XNEykvyPtNwwLvw6PeZDx25HmDcvL+8UW93tuPB7ct5/YxMoLRu/2N8twA
kk9Pg9vvA4Ox83ZcWGIQD1R8y1wSrIJRI5EYXH2OB6skGs6FqAVj6KlvhgVh
PNgvka4v/jUI+3Zdz2VF8sBWciLR63YQspi75z+O5kHeryNDSkeD8LyMmPO2
OHL/R/uR47JBODx5/+mbBB4sW7IxzCk4EK9WrYr5kcyDup8Kh5v/+ePPK+2f
gy7xIG7/5rZdWv5o4R9ktiiNB9yQ31u2bj+Lc2Bg0fpMHkyUY4GJry/aKKa4
lWXzIH3DaNDmcz54R9j4mX4OWU8AeyYhzBsdGwrP783nge6GHAH4emGrqYd0
VDkPahmj9/I2nkIVTZXTyyt4EFBg53aPdhIDFr3szr5P+jcu5H2WijtSO3gp
VTXkPDjNiN3RcMGU3cJyo03kPLxJiMo77YDjrDs+3s08yMoU3mZRcgiNVzi+
Fm3jwe+n5X2eQvZ47Y8sP/EZuT7is/K69gM49frpldVdPOh4EnttUastWlb7
Ted3k/HzDlyznrXC4nSt/ayXPNies+V9itMeFAt8W/PoFQ/6nVS0GIst0c4u
cc223v/H/6bpP7EDKzduDnzzH8nfvLm7UldsR6l1P98efUfOs8zqEnExc3QR
zYUfH3hgJ1ubT3UxxYaPVtlBgzwQEo8fmT1ijGuaJIQXDfMgaMfeWLc/huid
V33o8mceQGILobjBEDuj3B6rjPFAYcVLW6t/W1DjuIJy2VcyX9lR9e8+hjh7
vJUm/Z2M5ydqdivMCAUu3htP/yTxifK9f1RNMM9VefvzSTK+/OrxxYe34lm3
jgOsv2Q/byUWdHIscPuJs66Xpkl8bfiX0/PtqOKudvb3LLn/5a9stb6d+Ne9
O9p6Dh+WRi2rXM3Yje0ngy5XifCh5Ov3yOTXe/HaKc28lfP4sH2q2/x2hw2e
8eipODufDwpvxRUcZQ6g2enQhj4J8vmC936Pn9uhgielW38RuX/XsoHXTYfw
h2fv+8wlfBg61G7FeueAT7wivwlJ8UHt7CWVAMWjeNK7f/FjGT6c70o0XbTc
BQ19Ylcry5Hr8aUZ0eSG8r4czbCVfOAsEmmWe+aOj/zOmxgp8EH5l/rWkjce
uCwQQlvU+bDi8lb3l7W+OBQ4ekFTkw93LLx6SzLOYk1QanacNh+WBcEqoTjy
Ph/ytXYbnQ+vYtoPsE2C8X5Y1h+BLh86mx72R6eEYWy42XwmwYcJSUWn2xXh
aB/xWyZlIx9aJPf2aryJQImo7QwrQ7K/rVevhOhE475YoRO92/hw2ubX21d/
4lEoyW5g4BAf0rZJiSVbJ2N30sLvW47wISzPr/3iRDLmJ9+fk3uUD6jc0m4W
fRF3pixd6+zCh5vX9wbOvZuCOZfrrL948iF6V1O5+EQqeqe5OFl48+F5pMOW
FX6X0fzKijO3fflwXzXs/vY5afjrqnvyyUA+NMr3brsoegWNshSe/Yzkwz7l
0Xid91dx8MalAdMYPsQx1QbXWaRjaOHiv5lxfFBh7v9uXJGOjyqmlU0vkHxF
XFV87JuB9tUevMxkPlxcPHZv9EUGCj0a2fYjhQ/l7V1zv2pnon5bj2/GFT78
oDo+3NKViX1d285/T+eD64xyGC7OwrM9jTeMs/gwN53zSYeWhSv/03uQfo0P
iZ4fq9x3ZWHVhzsdEzl8qHv4YzjwVBZaD28YNMrlQ8yo7MV9CVn4e+za1NV8
Phj2WS8TK8jClB9ykhOFfKh+O/Ir6FEWMv+eX29UTPJnYCTc1pOF3f/EdK+W
8MFbq5IyPpqFp+YG7vhWRuplzro9OpuFkgt+ORre5YN6U9rrlsXZWLLU9eyV
e3zwT96km7wqG7fJDCR+reTDx90i4RZq2Ti20jZ3SzUfzDIj40Rp2Rin2FWd
VsuHKVhu9JCbjZqqJl3jdaTeO2/heSIbWzTrPhk85oP2yhsyQZuz8RiNPXO5
gQ8XoMgrfUs2inOKpcab+JD8TXfxbxLn6amoGTTzwVQyWCzLIBuNNl/Vu9zK
B24hBt7cmI2DxtK7xtr5sG4LP2C1XjaGWkQ7be4k+x24PCLLzsZ1lnMCUgV8
kHvXHZKvk42PrL2Tvjznw4I3FR2D67PR7uB43qYePtS6flnzkezvn4Nj7aXX
fBB2vuNaJZmNGcf6BKO9pL6XFI76z81GPXfL4Y1vSX23Lt215XcW9nq2zKa8
48MXmScSGiNZKB9cqb5xkA8Zz9lthS1ZWBlOIVKG+MDrHv7i+yALrWJzLT+P
8KFrVdnn5v/rdeli4MVxPlRF+HrsjiT5Lz75fPg3H8qKSu9ObszCkvKhEf0p
0j9Hy3SKKVloUXlQKHmGD7d32ElUrs3C2HrzDfrCumAoavDp2GwmbmiuhyRR
XdBaWxVf8TYTm5/x9wzN0/1fheUeTXX2hnHJrVAkSfwIpYgQaWLvehldiEmF
3Mp1KiokSZFSKCVCRDHnELnkcs4Xx6XyilAqU5pSSRdComSQkMz39+ez1n7X
2s/zed69NixZFvNPaB0HJdq1IhIlCcRLYCC9yMHc99yUXmkCQmuqH6cf4eDG
HoVCIkPgztJzV0zdOdjdH3c3YR4B8vBa3WYbDkYOibb1zCewr29A+l/CQY2x
sAFTBQIOBZwBLz0O1v0cnpGgSEDziKvfgyUcdBfer9CjRGBljPdy6/9xcFq8
U8dUhYBOgr/qfEUOinU0TNQtJiC4KPzWbSEH5zD59600CDDSHWPvlTi44OzF
lNalBMYOvsqo1+Cgiushb+flBM7NXOBloM9BTQP7VZ3aBO76fFTfZsbBlWJr
hXx1CZQ07f+0cScHjduVW4b0CGzfLP3SMJDdR55Q+rFVBBw/pS4yTmT9Rn30
mbGagF6aW/O+Cg7+4Xx/TcwaAhC/srPrAwcd9ApFZU0IXNFTVXgrwcVdIpee
pRIC3IJ4ToQGF71fHc5cvJ71c9W+pAu4eKB4p3+eGYGarIj6WR7sfjuqSlZu
JCB1gSSW5HMxUnfmq/WWBCYbud0GrSw/4d4bTVsInBz1PHhiiovphcXmbbYE
ZEwbmjxdMzE7IlHGbQeBRTZ19UPxmVjoEPy2x56A/OXzNkaNmXhLaN3x784E
BlwsthaaZGHdc7XN4bvY+5yb7H8QkoXNBaILxNwJfO5+57e/Kgtf2z3my/9J
YG1eY+y42XWcyHPtM/InsEnCr1rXLxuFw6Hi9iECtm3SKh412Th7x5IoiyAC
c2tTfQ7L5KDiVP9iu2MEsr/L32uuysHftoU6Hj5DwGXbzJ5lKrl4dDytiX+F
QCFNjYF5BRjeciJ57VUCi4+7DtkEFmD0dQ+vu+kEPPI0k81aCzDFRmv6SSYB
pw2aZTsSbqIgs9L4200C0ltb5cMkirAmOF0kpJiAt4TfWznvImzccqp1mkcg
YPzxwIWaInw+uslvroDNz7xXKse/GEcs23JW1hJIt0PFvViCR9eVq12oI5A7
prPsmQgPJ1YlZfTeI/Bzj+77hVo8FFLemsx9wJ632tU47MfDMzK6slMP2bx/
mTaEXOKhmKjkRacWtr93h+Nm8nko9bUxct4zAjcSShfJDPIwvjNbyP85gZH1
cxZES/FxXtvpsIdtBFbXbrb/vJyPC2vXBUW+IZD22OLagd18vFam/O39WwIN
Ey15Z47yUSV/Yj/9QMB9V5xkaDwflyQKvL53s/sjnlQ/8zYfc6Mvv9v+ieWt
o6+V9ISP2qGBLiWfWd62laLTXXws8rdtk/xC4I3y1/FN3/mo771yx75BAru1
Ki39xRksdZT6+94QAfGGA+3BCgwa23y2Uhsh0LyxwdhDk0FifMP89Q8CZisi
z/YDg6gdWWM8yfZ9VCYnyZpBc1VPk6QpAvtb5F+u3MlggxwIBqcJqJmllta5
M7hZQmWVtTCF7Xnc3fY+DD78OVmUJ0JB5v6bS18CGPxj6JWWqDiFp7nDcYlH
GXzaXZHjMYvCusJYTesTDNq9TlarkaQwf5FUgfppBttaDmcsmkPByU58QCWa
Qef6bYpHZSiI2R42sYphsKNCL/nZPArV7fFOxRcYdC+UltWXp+B8KjHc/iKD
Xdz+2FgFCt4f5Kys4hjck/xAok+RwqMc87orrO6LyY3coEyhVvadtSWrD4RH
CWWpUBi+Ipzvy84PBnqF/VpMwadB8Ek8lsHAvWY/nDUovBBx89U9z+Coi2pQ
xVIKrk9+PO09y2CI7dSg3HIKK6ZWC1tEMThp0b4/QJuCXFeQ/FbWT/jaqt5H
OhTiDa86LDjJYKT6kXdRBhQMsvTt54YwKK6ww6XTkMKEhZOTaxCD5yUN2tYZ
U1B8OTornc3v0shAy5gJhe8xe/jabL5yfc1WdpTNT1djS/KfDKZ05DXy1lNQ
ny17X8uTQcXWaHNpcwof5pq8Ht3NYHqjd42PBQXZoauK4q4Mqt4yN2ncSNn/
f+VPXycGs0oWC9QtKVj5bXr6f75Ls38ZnNxC4eezvjI3ewbzUt8UtdtQ6AgS
j5ttx+CKi9Vav9lSmMypFyE7GCyOSM25vJ2CkoV8mBCrDYKD1YbsKAgsRSS9
WV3ma5dhs5PCjyqZ4EB2vlZYsOebE4VM6wbNEAe2L1cV9JNcKaQ5gm0Ae58X
q46Nr3aj8E9PSIHPLgY7m1/XvfSgcGRy2YZA1t9XTxIb6k3hie+a8Cv7GJyY
yLBX2cvysMr/0e3PoFjStMpdHwqay38l+bD5yq7w+OR1gMKxd6reuiwP5fo6
vpg/hcSoF/mmLO/lLktC8w+xfYh99DAjjUGj4SgL6yAKoa81bV1zGYQLvdKD
wRQ2apW/CBcwaK1h2ZZwjIJpbo2cVBODO28VcI3CKNg5+j2c9YpBv/6Dhscj
KLzLej+8b0YpHj/z90/lSLafxYbKTxVKMVrJoBGjKWif42lV6JVixpYRR9FY
tv/jp2OnvUoxr8tePS+OQvg561L3U6VYFlrRb5VA4YZejyf9qxQf3TwefimF
5WNgqOn6thRf/v5mk2EahfEzigbJQmXY1U5lX1yj0Nq8qWrNkjKckJyRrZRJ
4fjlyAfp/mWodeDsgxs3KVxX4AV8kS9HI5G+RMtiCsqjiWUnzcuRfQhdB3hs
/td+ja0IKEfHR9KDBgIK2d2pvGst5Ritc3n+nVqWx+3wJsMUAX4c4Lo9e87O
J48IDplV4rdIYa3gl2z/vLJ654dU4qSy978L2yk0pQQfrSmuxHk2y6J2v6dw
acwhuk2pCs2Kigr6PlOYWzTn6+zhKrTeMDco9guF3yPyx5uXVaNjRwDV+0bB
P2IzmXSpxgBpoydBoxTufOzs21NXjWE5yWkKPyjMFJ2sOTVSjWfpmGf1BNuH
zFmCpqW3MPG5o86uKQqX9eXddBxu4V8Hq0enpyl87lD6xIm6hf8BsVhMRQ==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 30}, {-0.3368417891461033, 0.01486692492015113}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662580262883458*^9, 3.6627408277285233`*^9, 
  3.6627410319925213`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram analytical integration ", "Subsubsection",
 CellChangeTimes->{{3.662580335391251*^9, 3.662580347854196*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.662663865516747*^9, 3.66266387263675*^9}, {
  3.662740930124456*^9, 3.662740932284246*^9}, {3.6627409774224997`*^9, 
  3.662740992602038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[Alpha]", "."], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "1"], " ", 
    RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], "-", 
   RowBox[{
    SubscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"Sin", "[", "\[Gamma]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.662580496668601*^9, 3.662580524329887*^9}, 
   3.6625807205643873`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["l", "\[Lambda]"]}], "+", 
      RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
      RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}]}], " ", 
   RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "\[Gamma]", "]"}], " ", 
   SubscriptBox["\[Omega]", "1"]}]}]], "Output",
 CellChangeTimes->{3.6625808009208527`*^9, 3.662663647949336*^9, 
  3.66266384629681*^9, 3.662663878717762*^9, 3.662740827995923*^9, 
  3.66274090222885*^9, 3.662741032007402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"omega1", "=", 
  RowBox[{
   RowBox[{"(", 
    FractionBox["l", "\[Lambda]"], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Lambda]", " ", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"omega2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     FractionBox["l", "\[Lambda]"], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Lambda]", " ", "t"}], "]"}]}], "-", 
   FractionBox["l", "\[Lambda]"]}]}]}], "Input",
 CellChangeTimes->{{3.662580562822216*^9, 3.662580583075014*^9}, {
  3.6625806379366703`*^9, 3.662580700854102*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"l", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[Lambda]"}], "]"}]}], "\[Lambda]"]], "Output",
 CellChangeTimes->{
  3.662580591330871*^9, {3.662580642318239*^9, 3.6625807024308767`*^9}, 
   3.662663648152405*^9, 3.6626638464998913`*^9, 3.6626638787710447`*^9, 
   3.6627408280668697`*^9, 3.662741032014708*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["l", "\[Lambda]"]}], "+", 
  FractionBox[
   RowBox[{"l", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"t", " ", "\[Lambda]"}], "]"}]}], "\[Lambda]"]}]], "Output",
 CellChangeTimes->{
  3.662580591330871*^9, {3.662580642318239*^9, 3.6625807024308767`*^9}, 
   3.662663648152405*^9, 3.6626638464998913`*^9, 3.6626638787710447`*^9, 
   3.6627408280668697`*^9, 3.6627410320161533`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.6627478974883747`*^9, 3.6627479000288763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alphaSubs", "=", 
  RowBox[{
   OverscriptBox["\[Alpha]", "."], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "\[Rule]", "omega1"}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "\[Rule]", "omega2"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", 
      RowBox[{"n", " ", "t"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.662580736393354*^9, 3.6625808139278183`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["l", "\[Lambda]"]}], "+", 
      FractionBox[
       RowBox[{"l", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Lambda]"}], "]"}]}], "\[Lambda]"]}], ")"}]}], 
   " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "t"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"l", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "t"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", "\[Lambda]"}], "]"}]}], "\[Lambda]"]}]], "Output",
 CellChangeTimes->{{3.662580795306026*^9, 3.662580814236861*^9}, 
   3.662663648399335*^9, 3.662663846744177*^9, 3.662663878823184*^9, 
   3.662740828247067*^9, 3.662741032038022*^9, {3.662747892072556*^9, 
   3.66274790230695*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alphaPreInt", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"alphaSubs", "=", 
    RowBox[{
     OverscriptBox["\[Alpha]", "."], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[Rule]", "omega1"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], "\[Rule]", "omega2"}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{"n", " ", "t"}]}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6625808473183727`*^9, 3.662580856781876*^9}},
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "l", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"n", " ", "t"}], "-", 
     FractionBox[
      RowBox[{"t", " ", "\[Lambda]"}], "2"]}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"t", " ", "\[Lambda]"}], "2"], "]"}]}], "\[Lambda]"]], "Output",
 CellChangeTimes->{{3.6625808365383883`*^9, 3.6625808579376163`*^9}, 
   3.662663672448821*^9, {3.6626638560024014`*^9, 3.662663878861092*^9}, 
   3.6627408284129057`*^9, 3.662741032109789*^9, 3.6627479039420567`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alphaW", "=", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{"alphaPreInt", ",", "t"}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "->", 
     RowBox[{
      FractionBox[
       RowBox[{"It", "-", "Ia"}], "It"], " ", "n"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.662580861481062*^9, 3.662580928829833*^9}, {
  3.662580959433614*^9, 3.662581034326614*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"It", " ", "l", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "t"}], "]"}], "n"]}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", "n"}], "It"]}], 
         ")"}], " ", "t"}], "]"}], 
      RowBox[{"n", "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", "n"}], "It"]}]]}], 
    ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", "n"}]]], "Output",
 CellChangeTimes->{
  3.66258219168528*^9, 3.662663690765896*^9, 3.662663879045232*^9, 
   3.662740828715979*^9, 3.6627410322588778`*^9, {3.662747888426086*^9, 
   3.662747905886981*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "alphaW", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{"It", " ", "l", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Ia", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "t"}], "]"}]}], "-", 
     RowBox[{"It", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"Ia", " ", "n", " ", "t"}], "It"], "]"}]}]}], ")"}]}], 
  RowBox[{"Ia", " ", 
   RowBox[{"(", 
    RowBox[{"Ia", "-", "It"}], ")"}], " ", 
   SuperscriptBox["n", "2"]}]]], "Output",
 CellChangeTimes->{
  3.662583071117951*^9, 3.662663709972845*^9, 3.6626638790912037`*^9, 
   3.6627408288556747`*^9, 3.662741032310129*^9, {3.662747880927622*^9, 
   3.662747907577623*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.662582185638192*^9, 3.662582185645062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alphaPlot", "=", 
  RowBox[{"alphaW", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"l", "\[Rule]", "0.2"}], ",", 
     RowBox[{"It", "\[Rule]", "1"}], ",", 
     RowBox[{"Ia", "\[Rule]", "0.05"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6625809433845577`*^9, 3.662580951348146*^9}, {
  3.662581038573805*^9, 3.6625810608185253`*^9}, {3.662747866596961*^9, 
  3.6627478671656313`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.21052631578947367`", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"19.999999999999982`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"0.050000000000000044`", " ", "n", " ", "t"}], "]"}]}], "n"], 
     "-", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "t"}], "]"}], "n"]}], ")"}]}], "n"]], "Output",
 CellChangeTimes->{
  3.662581061558873*^9, 3.662663710132937*^9, 3.662663879155953*^9, 
   3.6627408290952997`*^9, 3.662741032339534*^9, {3.662747868493507*^9, 
   3.662747877989986*^9}, 3.6627479091438723`*^9, 3.662749763013912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "alphaPlot", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"4.21052631578947`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.050000000000000044`", " ", "n", " ", "t"}], "]"}]}], "-", 
   RowBox[{"0.21052631578947367`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "t"}], "]"}]}]}], 
  SuperscriptBox["n", "2"]]], "Output",
 CellChangeTimes->{3.662749794299369*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"n", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.662749749858088*^9, 3.662749754820743*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"alphaPlot", "/.", 
   RowBox[{"t", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662581472027672*^9, 3.662581481746686*^9}, {
  3.662582018607339*^9, 3.662582042298665*^9}}],

Cell[BoxData["0.16`"], "Output",
 CellChangeTimes->{3.662581482952693*^9, 3.662582043311722*^9, 
  3.662663710173643*^9, 3.662663879164258*^9, 3.662740829232665*^9, 
  3.662741032361424*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"0.16`", ",", "16"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.16\"\>",
   0.16,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.662582045968547*^9, 3.6626637101883574`*^9, 
  3.662663879172661*^9, 3.662740829372594*^9, 3.6627410323845453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"alphaPlot", "-", "0.16"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6625810974861927`*^9, 3.66258110954487*^9}, 
   3.66258145030031*^9, {3.662582120894899*^9, 3.662582122604226*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
DCt9P4t91fTD11Vj8/OAA91Gr/+dWE3/AxlJB7E=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 30}, {-0.3368417891461034, 0.014866924920151153`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662581110383325*^9, 3.662582124361936*^9, 
  3.6626637216022778`*^9, 3.6626638792431*^9, 3.6627408295164757`*^9, 
  3.662741032428361*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Beta", "Subsubsection",
 CellChangeTimes->{{3.6625825964077053`*^9, 3.662582596848104*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["\[Beta]", "."], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "1"], " ", 
    RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], "+", 
   RowBox[{
    SubscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"Cos", "[", "\[Gamma]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.662580496668601*^9, 3.662580524329887*^9}, 
   3.6625807205643873`*^9, 3.662582612829835*^9, {3.662582681422024*^9, 
   3.662582690555057*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["l", "\[Lambda]"]}], "+", 
     RowBox[{"b", " ", "cos", " ", "t", " ", "\[Lambda]"}], "+", 
     RowBox[{"a", " ", "sin", " ", "t", " ", "\[Lambda]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Sin", "[", "\[Gamma]", "]"}], " ", 
   SubscriptBox["\[Omega]", "1"]}]}]], "Output",
 CellChangeTimes->{
  3.6625808009208527`*^9, {3.662582674057057*^9, 3.6625826922508173`*^9}, 
   3.6626637217383137`*^9, 3.662663885228245*^9, 3.662740829792057*^9, 
   3.662741032440884*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"omega1", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox["l", "\[Lambda]"], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Lambda]", " ", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omega2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      FractionBox["l", "\[Lambda]"], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Lambda]", " ", "t"}], "]"}]}], "-", 
    FractionBox["l", "\[Lambda]"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662580562822216*^9, 3.662580583075014*^9}, {
  3.6625806379366703`*^9, 3.662580700854102*^9}, {3.662582699753118*^9, 
  3.662582702242635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"betaSubs", "=", 
  RowBox[{
   OverscriptBox["\[Beta]", "."], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "\[Rule]", "omega1"}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "\[Rule]", "omega2"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", 
      RowBox[{"n", " ", "t"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.662580736393354*^9, 3.6625808139278183`*^9}, {
  3.662582663756136*^9, 3.6625826695389633`*^9}, {3.662582706699565*^9, 
  3.6625827071636763`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"n", " ", "t"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["l", "\[Lambda]"]}], "+", 
     FractionBox[
      RowBox[{"l", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", "\[Lambda]"}], "]"}]}], "\[Lambda]"]}], ")"}]}], 
  "+", 
  FractionBox[
   RowBox[{"l", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "t"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", "\[Lambda]"}], "]"}]}], "\[Lambda]"]}]], "Output",
 CellChangeTimes->{{3.662580795306026*^9, 3.662580814236861*^9}, 
   3.6625827087868023`*^9, 3.662663721907111*^9, 3.662663885398678*^9, 
   3.662740829989176*^9, 3.662741032453114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"betaPreInt", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"betaSubs", "=", 
    RowBox[{
     OverscriptBox["\[Beta]", "."], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "1"], "\[Rule]", "omega1"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "2"], "\[Rule]", "omega2"}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", 
        RowBox[{"n", " ", "t"}]}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6625808473183727`*^9, 3.662580856781876*^9}, {
  3.662582715755653*^9, 3.662582745853065*^9}},
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "l", " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"t", " ", "\[Lambda]"}], "2"], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"n", " ", "t"}], "-", 
     FractionBox[
      RowBox[{"t", " ", "\[Lambda]"}], "2"]}], "]"}]}], 
  "\[Lambda]"]], "Output",
 CellChangeTimes->{{3.6625808365383883`*^9, 3.6625808579376163`*^9}, 
   3.662582746490623*^9, 3.66266374248555*^9, 3.66266388543757*^9, 
   3.662740830171217*^9, 3.662741032469728*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"betaW", "=", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{"betaPreInt", ",", "t"}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "->", 
     RowBox[{
      FractionBox[
       RowBox[{"It", "-", "Ia"}], "It"], " ", "n"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.662580861481062*^9, 3.662580928829833*^9}, {
  3.662580959433614*^9, 3.662581034326614*^9}, {3.662582766016873*^9, 
  3.6625827709148273`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"It", " ", "l", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "t"}], "]"}], "n"]}], "+", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", "n"}], "It"]}], 
         ")"}], " ", "t"}], "]"}], 
      RowBox[{"n", "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", "n"}], "It"]}]]}], 
    ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "Ia"}], "+", "It"}], ")"}], " ", "n"}]]], "Output",
 CellChangeTimes->{3.66258219168528*^9, 3.662582771731573*^9, 
  3.662663760213917*^9, 3.6626638855409718`*^9, 3.6627408302598658`*^9, 
  3.662741032567956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "betaW", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{"It", " ", "l", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Ia", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "t"}], "]"}]}], "-", 
     RowBox[{"It", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"Ia", " ", "n", " ", "t"}], "It"], "]"}]}]}], ")"}]}], 
  RowBox[{"Ia", " ", 
   RowBox[{"(", 
    RowBox[{"Ia", "-", "It"}], ")"}], " ", 
   SuperscriptBox["n", "2"]}]]], "Output",
 CellChangeTimes->{3.662582975523921*^9, 3.662663781535986*^9, 
  3.66266388558994*^9, 3.6627408303511877`*^9, 3.6627410326157846`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.662582185638192*^9, 3.662582185645062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"betaPlot", "=", 
  RowBox[{"betaW", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"l", "\[Rule]", "0.2"}], ",", 
     RowBox[{"It", "\[Rule]", "1"}], ",", 
     RowBox[{"Ia", "\[Rule]", "0.05"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6625809433845577`*^9, 3.662580951348146*^9}, {
  3.662581038573805*^9, 3.6625810608185253`*^9}, {3.662582782464817*^9, 
  3.66258278669044*^9}, {3.662748328732554*^9, 3.6627483292720327`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.21052631578947367`", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"19.999999999999982`", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"0.050000000000000044`", " ", "n", " ", "t"}], "]"}]}], "n"], 
     "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "t"}], "]"}], "n"]}], ")"}]}], "n"]], "Output",
 CellChangeTimes->{3.662581061558873*^9, 3.662582797690234*^9, 
  3.6626637816859922`*^9, 3.662663885650712*^9, 3.662740830504301*^9, 
  3.662741032644487*^9, 3.66274833054862*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"betaPlot", "/.", 
   RowBox[{"t", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662581472027672*^9, 3.662581481746686*^9}, {
  3.662582018607339*^9, 3.662582042298665*^9}, {3.6625827934586477`*^9, 
  3.662582794907188*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.662581482952693*^9, 3.662582043311722*^9, 
  3.662582799548202*^9, 3.662663781786125*^9, 3.662663885692279*^9, 
  3.662740830596108*^9, 3.662741032666389*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"0.16`", ",", "16"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.16\"\>",
   0.16,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.662582045968547*^9, 3.662663781802142*^9, 
  3.6626638857639647`*^9, 3.662740830869102*^9, 3.662741032687429*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"alphaPlot", "-", "0.16"}], ",", "\"\<\[Alpha] linear\>\""}],
         " ", "]"}], ",", 
       RowBox[{"Legended", "[", 
        RowBox[{"betaPlot", ",", "\"\<\[Beta] linear\>\""}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{"alplot", ",", "\"\<\[Alpha] nonlinear\>\""}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{"beplot", ",", "\"\<\[Beta] nonlinear\>\""}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66258323866763*^9, 3.6625832481353903`*^9}, {
  3.662583476587924*^9, 3.6625834810377913`*^9}, {3.662659053325741*^9, 
  3.662659071097679*^9}, {3.662663364616563*^9, 3.662663386335772*^9}, {
  3.6626635078846693`*^9, 3.662663522891315*^9}, {3.662664122839673*^9, 
  3.66266412964491*^9}, {3.662664227260038*^9, 3.66266423170085*^9}, {
  3.662664342009264*^9, 3.662664353664343*^9}, {3.662664401822979*^9, 
  3.662664515016016*^9}, {3.662664561499412*^9, 3.662664684134646*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DCt9P4t91fTD11Vj8/OAA91Gr/+dWE3/AxlJB7E=
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$24512, {1}}]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wcN1P8rWJyZEglJyUC9+kUDL1Ylym5UugHSlOJ1Cd81UDet+ASvaATIbI8/
wljQwDZhIe7tpy6DbKDdEwVlTZzgmczLzVOBLyb3fmuoa6Ly/vSdQ+E76VSu
FmN9bU3UHfE7Uv3hKF32nnGH5SZN/LbDPef3pCdd7inpz8XdmigSX8QusjOI
3u1/zDzcShMP7S2vZ9wIpqca3b0Tc0gTL7zKkd3kFEqXf8Whlu2giXX2n8rc
bobT5b8P7e04r4maXF9Lw+Ju0rvzlBJ7Lmji5qpyw+xVt+ip549+G7msibWx
bbndntF0+ZVXASv/aaKAx4llLeU79G4Wez3fLU3kzyp60L45lp4abcQnGauJ
s1R12vkvsXR52cI0Haom/p3ew3Fa5C69u29wZPNDTZwK9Lv1X/ZdemqO4kaz
LE3cYKrLFq9/jy6/KfbFsaeauGPm/WkDs3h695+XIqdKNbGUpl+b2xhPT21c
Ze9TqYlfOlpZzdvu0xX2+01eb9TE4cbOvH+kBPp72/QEoxeayPil90IyIoEe
dbx12+RrTfSyr/l7rT+BPudGuXnsgyZq1O1RdIlLpBectVkv9EUT9TcGhQ1+
S6Sf9L32obFXEz/L64x0rk2ivwnuUtYZ0cSu42LtuyqT6NfDeV/2/dTEE5SB
k4NzSXTjm5u87k9poozPF6HNusn0mRgXccs5TYw92/f8kHsyPS/+TvW/JU0M
C6Zds0lOpjtRa51KVzTx3mr/NzYvkulS6T+4PTi1cLLzqLrvVDK9LVuyUH61
FtotSSi2SFHpEflmh94KauHG7uAjEVup9K3FPov/iWqhQ8/eU7RjVPpU+YOH
W6W0MHhTd9XDACo9t7bZfEJOCy0y3t61jqHSHRvnxx6RtNC57ePA3CMqXfyl
2t2jZC0c53XF+nIqvbn1gKGglhaGaeYxPzVR6aHvQnob1mnhS8xdPv2eSt/8
OT/iwkYtDBm79Cb3K5U+3tuppW2ohauejDk1jFDpWd+53n7dpoVl0y7zgxNU
ut2o3sV4Uy3U0dEYspil0oUnTyjs3qmFHV9JXgqLVHrTbDRj2VILL7CvfpT4
h0oP/lPlWWKthTvMtlr//Eul668aXuNuo4XbcoU/Eec1fZRbvFzumBaqjf+R
+0PY0wVM7d84EHbrfSeUCXxE1Iv9PxctFA98q7a0RKULSafkbnHXwtqYnRK1
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
/B8hvpov
          "]]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$24512, {
          2}}]& ]}}, {{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5]], 
          LineBox[CompressedData["
1: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
OsCzhfl55O1GlF/QW4YiHQi+v+L8xYXw0/AA69MyHXA0Xu2dPEfUu3dF6ks1
4ffUn/jDhxuxmGbbw5MNOuDnwHs4YWcjbvNiXe9vJfzvFo76qtmIDb+HHPd0
6wDXzKuPskKNuPdaxrvafh14f6XjlsFGA4adf3TuyHsdCP/9XdrhYwO2Hb6x
8GNUB9ylPMuMKxuQ2fyEd+C0DmzJifB7F9WA5gY7WcW+6QCzKN/LrVcacOOv
Wb/HvA44uCZ6n9/ZgIUNe571/SL8PnItb0ywAR1D91/QXNMB8asLYe++1KOE
lY1m2D8d2Dr3x/HOm3p8EavROcqgCwoid1323a1H5UnmS7qsBKYfdd2zvx5z
1aa3hHDpgtOOoYYSoXrUvYEvP/Drwh6Z40KDY3VYadP245ioLnCEfWPa9bIO
d5L6yYNSuiAh+G19zamOuL999D6koAvbjGSbrTXr8ODs56ZeVV3I9c/dm7RY
ix7BiUr2JF04cdPKJ/JNLcbK2YZ+J+vC1cl2FfKdWqxEjtnbRrpgVrg1ehxq
cdSuyXKLsS7sKome+LalFnnUaz/bm+mCtaz5v8MvEU03KvzK9upCbHuD1d0d
iDc7S0R5DuhCnIuu+MeRGnz1LL/YyVYX/rkn/nvnXYPutjwHau10QYaVSeiP
fA0acrv/EDyjC+Fdomw3equRvr0v9IqDLhz8F3Ep5m41dtzVVWy8rAuOQY6M
cUbV6HnserOFmy4I7xTXCfpdhapaJQ5dHroQzyvHQVtRhcMMK0w2XrpwTnw1
iOduFYYO62e88yf8uShIybapQqYu+Wm7YF04JGJomKtchYHIKzPxQBfYBQb2
zDJUIV0hzSmHSF2gllI7pb5Uom/aXPxsjC6cWl0YWOmuxPArVrnGzwk99JsL
MVWVmKyfXxfzgsgXc/NgcW4l5v/jHviRoQveNIrv3qVVYm2r29edObqgI3k2
2jexEt9cy1t/VqgL+oxOqXIJlfha8gfnSqkudAnO+evFE/naVGWtqnWhzaLp
hgixHn3dkZxZrwul2wJkyc8rcThv8K1eqy6w7v9jSZtciRKzZpfqunRB+uLb
n2UvKvG04huG/f26cKX6VWkGUT/tjELS8BDhR/HRHeIvK3G8OcD36KguFNYt
8bulVqK4+rj9uyldmGaXrtiSVInHIrbDoRldeGq1fa95TCVGrcRL980R+Ow1
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
LzHA1Hwsc+k+xv//dVgF2gjT4wKdGP8PSSVFkw==
           "]]}, 
         Annotation[#, {{Legended}, 
           Charting`Private`Tag$24555, {}}]& ]}}, {}}, {{}, {{{}, {}, 
        TagBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
DU8OlKwUasLvBeST2n0Fdbt8fdZaqQldV2Qjr2vEoqa2f9+vtGgCz8hlfr26
aDTZ/sZLq1MTPqZmr178eA7x08van73QhE+h9+P66WFoc9cVrbARTUi9vlWG
+OowCujdmyw+pQn+gr/UiZ4eqOWChdnad03QTPthtjnQEEsS5D69/60JEiZh
QzZ7/PGpiT/X2zi1wKRvUIa/7TjuTx0l5gprgcspma33isJxl5lM+KicFmjJ
c6bs2xyNKeMe9TJaWjCaUERQ/xSLW+NSVz2JWiCffSbYJz8O1+u+2JKGtKBF
bpt6itc1rHc4/JXrdi24epvr3fZXN3F+nswJIXctCP1LvS9x/zaWHiNzP/fT
AunTQQf9be7g29JB+TeOaIG9ysnuyXcpWGxxeq/xGS0o3agjXNl3F2fSj4m8
u6gFzb6P01efp2GFrO89Mde0gD/un2eTXgbODz0Tq3FXC87wGW2OCL+H2x7d
RRIPtSBRdC2drTITD7+q/c3xWAve/Nv0Y8/LLLzE8aZxpVYLlB58D+sZyca8
W1bCv5AZ5yOe7WF5dh8v19u7CPRpwVl59RCe4hz8zuSejumQFsznxGctHX6A
KbUz7AETWrBaaL1dieshLiFajCfOaQGzjeq3Q7se4rmG9Um0yog3K9SpKuEh
NrJsnP7Jog2++zctNdQ/xOHtZ+cf82lDTPYuG5MPD3GTrclygKQ2KBU+8Py3
9hDvolUvbFLRhpdx55/O8+fiSWvDb7V62pBT0OOsJZeLI9rLv/qZakPTV49Q
slou5gfdz9w22iDgtkB7pZWLP3tnxHHu1IYqzRHu29q5uOUMmya7lzYYVLwQ
Emfo79wO7WY5oA1EmSF+snouDn48coTphDZM6COXadVc7FZWFyoRqQ0iQQ3r
Cwx569Pb4fpXtSHKoqx7s2Yu1qo8EmV7WxtkN7RPiRBysWj1tlifLG3YIUvy
7rTMxWFpcI63UBsOaXZX5Lnk4oEIi+MtFdpAd9ez5j2Wiw18TQ+ENGuDclOQ
0eztXHwTiN6yHdowRyPlCrfl4of7zsT1DDDsr9Q7G/7MxVVRdVXn3mvD+mED
mRmTR5iW+WtU/Ys2/Fehdr/p8iM81GC66fWiNog39osxjzzC1IfpmR83tCGh
Szy1wCYPVySsaM1z6ADmz32xWJ+Hs0PdG9eFdCDujGPEiGk+TvCsceCU04ED
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
d2B7Z/HlOvT/V4c1wUYsPn7Bqg79DzW23p4=
           "]]}, 
         Annotation[#, {{Legended}, 
           Charting`Private`Tag$24589, {}}]& ]}}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 30}, {-0.3368417891461034, 0.17634542749518753`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\[Alpha] linear\"", "\"\[Beta] linear\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]
                    ], BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Alpha] nonlinear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "True", "}"}], ",", 
                    RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Beta] nonlinear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "True", "}"}], ",", 
                    RowBox[{"{", "True", "}"}]}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.662664684688484*^9, 3.662740831202248*^9, 
  3.662741032825074*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"per", " ", "=", " ", "12.34"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pdata", " ", "=", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"x", "/", "per"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "n"}], "}"}]}], "]"}], " ", "+", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{".1", ",", 
     RowBox[{"{", "n", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "pdata", "]"}], "\n", 
 RowBox[{
  RowBox[{"ListPlot", "[", "pdata", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.66274138636843*^9, 3.662741421394753*^9}}],

Cell[BoxData[
 RowBox[{"{", "1000", "}"}]], "Output",
 CellChangeTimes->{{3.66274136588409*^9, 3.6627414216559896`*^9}, 
   3.662741641033457*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"beplot", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.66274147408372*^9, 3.6627414780708113`*^9}, {
  3.66274153945713*^9, 3.662741539631569*^9}, {3.6627415812306128`*^9, 
  3.6627415813719263`*^9}}],

Cell[BoxData[
 RowBox[{"{", "1417", "}"}]], "Output",
 CellChangeTimes->{3.662741478550243*^9, 3.6627415402034616`*^9, 
  3.662741581805223*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"beplot", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6627415680966263`*^9, 3.6627415869355583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"Fourier", "[", 
     RowBox[{"alplot", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662665353191984*^9, 3.662665359236804*^9}, {
  3.662665460805126*^9, 3.6626654817595053`*^9}, {3.662740810786343*^9, 
  3.6627408124668093`*^9}, {3.662741069783978*^9, 3.662741089241651*^9}, {
  3.662741322778925*^9, 3.662741347266082*^9}, {3.6627414364072866`*^9, 
  3.662741445231167*^9}, {3.662741523900505*^9, 3.6627415302481403`*^9}, {
  3.662741595030026*^9, 3.662741598783499*^9}, {3.662744052891601*^9, 
  3.662744072542486*^9}, {3.662744248032042*^9, 3.662744310868403*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
b+W/7pRfGQ7+Mz1ie0s6XiPDlyEfRDWNdLxWBiu7tb7LRXS8Tobl471ys+rp
uCgRCaUlnh0/EJskoqnTwZbjXhGbJSLZrfOWcY+JLRKReuTZrpcPicWJuBk2
o8eIO8RWiSi0vNCk4hKxTSJWuJy87X6O2D4Rv68sDv5rLzESYbvf8TfDX8RO
iZjrMzZ37Vlil0T06Jq25eExYrdEZA57GxB/iFiSiLTYPSmeRcR+xu+7/61l
6C5iaSKexo5RKbcSRyZi6rDTy6rziGWJeBbWq36fklieCPOo8svHw4mViRga
cD9FsYk4LxFP1lV1GZZLrE9Ewc74EVHpxIWJiFTt+bZQRlxs/Pvu43fkRxOX
JOJz2MypN8KIDYk4uahvY4OUuDwRhpzcxR9XElcmouPMtlWJPsRViQh4e/yc
p4eQ/0ScfpweMN+TuCYRvtLwO9WLhPwnwmFK9OVoV+K6ROR7FdzVzxLyn4T6
TZOTYqcL+U9CrpWTyn+KkP8k/FLTaBE1Uch/Ek4vMn11fKyQ/ySMO2Cl+24v
5D/JuB7wGRRgJ+Q/CTnv2v4VOlzIfxIex869cc9ayH8S+ngVjOs1RMh/Et7d
nDimoK+Q/yTsdZ/SokQs5D8J3ebZlq79Qch/EgzeUue7PYT8Gz9vseevm7oJ
+U+CW+NLn+rOQv6TkL+7xz+fOwr5T4JvUEbNsk5C/pOQN6V+glVXIf9JSH8/
ZlLpKCH/SZi9+WpIVcUSyn8SkgwdypbUEBcaz+/gFTXtFXFxEjLipvooBC5J
wuGuop4fXxAbkhApfrBS8Yy4PAnZP+xd+O4JcWUSsupt3zd/TFyVhEHLuh31
riauTkJM73tlHo+Ia5Kg2N0s8u014tokbG5nddfyOnFdEmwyMo/PvEosSsau
2h/rN1YSmySj155bHdtdITZLhu7JRoeTfxBbJMMyLv+IwzlicTIW9eji51JG
bJWMax3zn7w7Q2yTjHV7OhYuPk1sn4yJsYNtdpYSIxm7H/4myjlO7JQMcVZD
E8UhYpdknKg9sqGN8PluyRCNeLpXcotYYvz8fcqSZV7EfskYdWfAgkNriaXJ
cCnXWrTfSByZjPY3xvhVbSKWJaPrpmtWDcJxeTLmtvDIv5BPrEzGs3txxwet
J85LNs6Xi46kC5+vT0adaUXoOYELk+E2veSfaoGLk1HcLtH3pFzIfzKWdnx4
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
jfH7cz8jOy0uc78jey1k3A/JQYvz//FL0mI291Ny1KKB+y05aVG2nvkxzdTi
jinza3LRYgP3c5qvxQXu9+SmhYT7QblrMYn7RUm0uMH9pLy1yOV+U35a9OZ+
VAFaZHK/KqkWZ7mfVajx+nC/q0gtPnM/rFgtfuR+WTItHLifVooWi2uY35Zc
i7fcjytbiwTu16U05p/7eWmNx7nfV54WXbgf2EYtDNwvTK/FHu4nVqBFJPcb
K9RCw/3IirQYE8D8yoq1yOJ+ZoeN34f7nZVoEcT90Eq1qOd+aQYjv2N+amVa
LOV+a+VaLJ/O/NgqtLDnfm2VWvhyP7frWozjfm9VWui5H9w9LW5yv7hqLVpY
Mj+5p8Z8VTG/uRotHnE/utdaNHK/ulrj75H72X00/l65312dFse5H16DFp25
X55IhxvcT6+5DvVFzG/PRIcF3I+vrQ4nuV+fmQ5TuJ+fuQ6zud+fhQ6ruR+g
pQ6juF+gWIcD3E+wvw467jdopUMI9yMcrMNV7ldoo4MD9zO00+EM9zu018Gp
gfkhOuhwkPslQoceU5ifoqMOJtxv0UmH+9yPcaYOMdyv0UWHJ72Yn+N8Hey4
36Ob8e+5H6S7Dj7cL1Kig5b7SXrr4ML9Jv106Mn9KAN0COB+lVIdLnI/y1Bj
/rjfZaQOV7gfZqzx7//jl6lDV+6nmaLDhyLmtynX4Q7348zWQcX9OpU6pHE/
T60Ob3swv888HbpzP9CNOizifqF6HR5zP9EC3X/9Rgt12ML9SIt0MOV+pcXG
z+d+pod1+JH7nZboYOB+qKU6fOR+qQYdrnE/1TIdUrjfarkO/3I/1godZnG/
1krj74P7uV7X4Sb3e63SIZr7wd7TwZH7xVbrsJf7yT7VQcr9Zmt08OV+tK91
SOZ+tbU6nON+th91COZ+t3U6dOZ+uA06nP2PX+5aVHM/3eZrcZ777ZqsxRru
x9t2LS5wv16ztUjmfr7mazGJ+/1arMVG7gdsuRZLuF+weO1//YT7r/3/fsP/
B+IzwGo=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 100}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.662665442943606*^9, 3.6626654833158293`*^9}, {
   3.6627408136985397`*^9, 3.6627408314983*^9}, 3.662741033041602*^9, {
   3.662741074503376*^9, 3.662741090273872*^9}, {3.6627413261107807`*^9, 
   3.662741348809473*^9}, 3.662741446190127*^9, {3.662741524887784*^9, 
   3.662741530782865*^9}, {3.662741593023011*^9, 3.6627415992074757`*^9}, {
   3.662744054696733*^9, 3.6627440772476788`*^9}, 3.6627442084525223`*^9, {
   3.662744257230918*^9, 3.662744311995154*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArrowsDeltaFunction", "[", 
   RowBox[{"eqn_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xsubs", ",", "listDeltas", ",", "coefDeltas", ",", "locationDeltas"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xsubs", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "/.", 
         RowBox[{"Cases", "[", 
          RowBox[{"eqn", ",", 
           RowBox[{
            RowBox[{"DiracDelta", "[", "a__", "]"}], "\[RuleDelayed]", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{"a", "\[Equal]", "0"}], ",", "x"}], "]"}]}], ",", 
           "Infinity"}], "]"}]}], ")"}], "/.", 
       RowBox[{"x", "\[Rule]", 
        RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listDeltas", "=", 
      RowBox[{
       RowBox[{"DiracDelta", "[", 
        RowBox[{"x", "-", "x0"}], "]"}], "/.", 
       RowBox[{"x0", "\[Rule]", "xsubs"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"coefDeltas", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"eqn", ",", "listDeltas"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"locationDeltas", "=", 
      RowBox[{"Flatten", "[", "xsubs", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Arrow", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"locationDeltas", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"locationDeltas", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"coefDeltas", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "locationDeltas", "]"}]}], "}"}]}], "]"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6627461027301483`*^9, 3.6627461048947077`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["alphaPlot"], "Input",
 CellChangeTimes->{{3.662745065390802*^9, 3.662745066883503*^9}}],

Cell[BoxData[
 RowBox[{"0.04210526315789474`", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"4.`", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"0.25`", " ", "t"}], "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "5"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"5", " ", "t"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.662745067243153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fo", "=", 
  RowBox[{"FourierTransform", "[", 
   RowBox[{"alphaPlot", ",", "t", ",", "p", ",", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"-", "2"}], "*", "Pi"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6626655530478277`*^9, 3.662665555373809*^9}, {
  3.6627446453023043`*^9, 3.662744674365185*^9}, {3.662745046136402*^9, 
  3.662745046402261*^9}, {3.662745159433915*^9, 3.6627451632214127`*^9}, {
  3.6627453399770403`*^9, 3.662745342440606*^9}, {3.662745897975297*^9, 
  3.662745908653225*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.5291103416572284`", " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.25`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
     RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "-", 
  RowBox[{"0.02645551708286142`", " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"5", "-", 
     RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "+", 
  RowBox[{"0.5291103416572284`", " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.25`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "-", 
  RowBox[{"0.02645551708286142`", " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"5", "+", 
     RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.6626655569088507`*^9, 3.662740831657744*^9, 3.662741033118659*^9, {
   3.6627446492999277`*^9, 3.66274467529606*^9}, 3.662745047064163*^9, 
   3.6627451638577538`*^9, 3.662745343913192*^9, {3.6627459026730824`*^9, 
   3.662745909264372*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", "Fo", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.5291103416572284`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.25`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
      RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.02645551708286142`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"5", "-", 
      RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.5291103416572284`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.25`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
      RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.02645551708286142`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"5", "+", 
      RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.662745028520486*^9, 3.6627450495740223`*^9}, 
   3.66274535033326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"Fo", ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"ArrowsDeltaFunction", "[", 
       RowBox[{"Fo", ",", "p"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.0005"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662746126858265*^9, 3.662746156073228*^9}, {
  3.662746232605681*^9, 3.662746275502969*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    Thickness[Large], 
    RGBColor[1, 0, 0], 
    ArrowBox[
     NCache[{{{
         Complex[0.039788735772973836`, 0.], 0}, {
         Complex[0.039788735772973836`, 0.], 0}}, {{Rational[5, 2]/Pi, 0}, {
        Rational[5, 2]/Pi, 0}}, {{
         Complex[-0.039788735772973836`, 0.], 0}, {
         Complex[-0.039788735772973836`, 0.], 0}}, {{Rational[-5, 2]/Pi, 0}, {
        Rational[-5, 2]/Pi, 0}}}, {{{0.039788735772973836`, 0}, {
        0.039788735772973836`, 0}}, {{0.7957747154594768, 0}, {
        0.7957747154594768, 0}}, {{-0.039788735772973836`, 
         0}, {-0.039788735772973836`, 0}}, {{-0.7957747154594768, 
         0}, {-0.7957747154594768, 0}}}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0, 0.0005}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6627461579804983`*^9, {3.6627462374316072`*^9, 3.662746276289837*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "@", 
  RowBox[{"Abs", "[", "Fo", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.5291103416572284`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.25`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
      RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.02645551708286142`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"5", "-", 
      RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.5291103416572284`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.25`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
      RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.02645551708286142`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"5", "+", 
      RowBox[{"2", " ", "p", " ", "\[Pi]"}]}], "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.662744707973065*^9, 3.662745244639179*^9, 
  3.662745354349016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Abs", "[", "Fo", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "1*^-1", ",", "1*^1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662744658664523*^9, 3.662744678503183*^9}, {
  3.662745247736429*^9, 3.662745247965542*^9}, {3.662745298099986*^9, 
  3.662745327608511*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[1, 10], 10}, {0., 0.}}, {{0.1, 10}, {0., 0.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6626655870252323`*^9, 3.6627408318871813`*^9, 3.6627410331763144`*^9, {
   3.662744651831205*^9, 3.662744678917757*^9}, 3.662745250310185*^9, {
   3.662745295781138*^9, 3.662745357173826*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FourierTransform", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"10", " ", "t"}], "]"}], "+", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", "t", ",", "\[Omega]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Abs", "[", "%", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "1*^-1", ",", "1*^5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.662745392772599*^9, 3.6627454090476913`*^9}, {
  3.662745483752883*^9, 3.662745510256008*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{
     RowBox[{"-", "10"}], "+", "\[Omega]"}], "]"}]}], "+", 
  RowBox[{
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Omega]"}], "]"}]}], "+", 
  RowBox[{
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"1", "+", "\[Omega]"}], "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"10", "+", "\[Omega]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.662745398260502*^9, {3.662745469179908*^9, 3.662745510927865*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQvXfh3akbs5kOMEDB418FwYEODHC+g8eL98Vnfu+H
8buuvjojmPEdzj8s8uD3XsnPcH7Ii8yP32+/gfMPyfAI86o8gfNFlW8v6E66
CudLLXaT3rxyGZwvI2cocvPjGXsY/+kOXoWUeQ/g/MVbxC7vSHgJ5zuqyRZW
/P4A5zMHnV/FtOQrnP/FqTXgwJ+fcP6OydEabzb9g/PdZspfb1nJ6ADje3gL
B6y9yAznm+iKP+rRYIPzt3+U0WoL54DzVZ4ZdZtt5YLzZzb6H77PzgvnL/uf
u3GRET+cfz7ML4bvmACcLz7/mdWNe4Jw/mMrpla5T0Jw/uJ3S6MPyIjA+esn
e/HmG4vC+RsCyr0rE8XgfNNE9a//O8XhfLbkG5WT50nA+WdqBLubTknC+ffa
vcvrHknB+SXPOM5/+yIN5/+P8dt8Sk4Wzr92ZErRahM5OH+hS/K+54nycP6d
qJlFM2wV4HzNvYesq48j+AXaBqe5YxXh/FghuROLXiD4rqwB3c/rleD89wud
W7JElOF8++3bX32eh+B33sgX1zZVgfMri1ZszDiI4GtvW9T4xEsVzr/B+lCc
7wGCr31uvrRdthqc37pXR3EemzqcDwACNrht
   "], {}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.993360310748145, -1.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2.993360310748145, 12.203700682724328`}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.596634733096073`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.002099841204238`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.156250521031495`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.289781913656018`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.407564949312402`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.206072645530174`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.611537753638338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.89921982609012, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.122363377404328`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.304684934198283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.458835614025542`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.592367006650065`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.710150042306449`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.22097566607244, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.508657738524219`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {14.73180128983843, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.7047480922384253`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.8718021769015913`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{
  3.662745398260502*^9, {3.662745469179908*^9, 3.662745511030048*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.796", " ", "0.05"}]], "Input",
 CellChangeTimes->{{3.662740756623218*^9, 3.662740763650936*^9}}],

Cell[BoxData["0.0398`"], "Output",
 CellChangeTimes->{3.662740764398588*^9, 3.6627408320901213`*^9, 
  3.6627410332234898`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{869, 1028},
WindowMargins->{{-10, Automatic}, {Automatic, -10}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 273, 6, 175, "Title"],
Cell[CellGroupData[{
Cell[878, 32, 110, 1, 67, "Section"],
Cell[991, 35, 124, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[1140, 40, 754, 20, 69, "Input"],
Cell[1897, 62, 483, 10, 23, "Message"],
Cell[2383, 74, 329, 9, 32, "Output"]
}, Open  ]],
Cell[2727, 86, 160, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[2912, 92, 199, 5, 63, "Input"],
Cell[3114, 99, 548, 12, 48, "Message"],
Cell[3665, 113, 95, 1, 32, "Output"]
}, Open  ]],
Cell[3775, 117, 298, 6, 55, "Text"],
Cell[CellGroupData[{
Cell[4098, 127, 464, 12, 32, "Input"],
Cell[4565, 141, 612, 12, 23, "Message"],
Cell[5180, 155, 92, 1, 32, "Output"]
}, Open  ]],
Cell[5287, 159, 289, 8, 33, "Text"],
Cell[CellGroupData[{
Cell[5601, 171, 763, 24, 89, "Input"],
Cell[6367, 197, 869, 15, 23, "Message"],
Cell[7239, 214, 91, 1, 32, "Output"],
Cell[7333, 217, 251, 7, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7621, 229, 794, 25, 89, "Input"],
Cell[8418, 256, 782, 22, 50, "Output"],
Cell[9203, 280, 1233, 36, 114, "Output"]
}, Open  ]],
Cell[10451, 319, 122, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[10598, 324, 467, 13, 121, "Input"],
Cell[11068, 339, 877, 24, 60, "Output"],
Cell[11948, 365, 258, 7, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12243, 377, 520, 16, 55, "Input"],
Cell[12766, 395, 375, 10, 50, "Output"],
Cell[13144, 407, 171, 4, 32, "Output"]
}, Open  ]],
Cell[13330, 414, 179, 2, 33, "Text"],
Cell[13512, 418, 560, 17, 56, "Input"],
Cell[14075, 437, 221, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[14321, 445, 463, 13, 32, "Input"],
Cell[14787, 460, 219, 4, 32, "Output"]
}, Open  ]],
Cell[15021, 467, 113, 1, 33, "Text"],
Cell[15137, 470, 333, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[15495, 482, 374, 10, 89, "Input"],
Cell[15872, 494, 592, 12, 28, "Message"],
Cell[16467, 508, 121, 2, 32, "Output"],
Cell[16591, 512, 137, 3, 49, "Output"]
}, Open  ]],
Cell[16743, 518, 111, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[16879, 523, 435, 12, 66, "Input"],
Cell[17317, 537, 282, 6, 49, "Output"]
}, Open  ]],
Cell[17614, 546, 462, 13, 33, "Text"],
Cell[CellGroupData[{
Cell[18101, 563, 1953, 57, 171, "Input"],
Cell[20057, 622, 818, 14, 23, "Message"],
Cell[20878, 638, 198, 5, 32, "Output"],
Cell[21079, 645, 198, 5, 32, "Output"],
Cell[21280, 652, 988, 17, 51, "Message"],
Cell[22271, 671, 421, 11, 49, "Output"],
Cell[22695, 684, 607, 12, 51, "Message"],
Cell[23305, 698, 537, 15, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23891, 719, 161, 2, 67, "Section"],
Cell[24055, 723, 306, 6, 33, "Text"],
Cell[24364, 731, 1968, 63, 80, "Text"],
Cell[CellGroupData[{
Cell[26357, 798, 2946, 84, 226, "Input"],
Cell[29306, 884, 603, 12, 51, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29946, 901, 588, 17, 32, "Input"],
Cell[30537, 920, 605, 12, 51, "Message"],
Cell[31145, 934, 684, 19, 32, "Output"]
}, Open  ]],
Cell[31844, 956, 336, 9, 33, "Text"],
Cell[CellGroupData[{
Cell[32205, 969, 633, 18, 32, "Input"],
Cell[32841, 989, 605, 12, 51, "Message"],
Cell[33449, 1003, 534, 16, 32, "Output"]
}, Open  ]],
Cell[33998, 1022, 356, 10, 33, "Text"],
Cell[CellGroupData[{
Cell[34379, 1036, 396, 10, 32, "Input"],
Cell[34778, 1048, 207, 5, 32, "Output"]
}, Open  ]],
Cell[35000, 1056, 383, 7, 55, "Text"],
Cell[35386, 1065, 134, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[35545, 1071, 781, 22, 58, "Input"],
Cell[36329, 1095, 603, 12, 51, "Message"],
Cell[36935, 1109, 394, 11, 32, "Output"],
Cell[37332, 1122, 603, 12, 51, "Message"],
Cell[37938, 1136, 395, 11, 35, "Output"]
}, Open  ]],
Cell[38348, 1150, 92, 1, 32, "Input"],
Cell[38443, 1153, 76, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[38544, 1158, 119, 1, 37, "Subsubsection"],
Cell[CellGroupData[{
Cell[38688, 1163, 709, 15, 55, "Input"],
Cell[39400, 1180, 8728, 223, 143, "Output"]
}, Open  ]],
Cell[48143, 1406, 414, 9, 32, "Input"],
Cell[48560, 1417, 1064, 27, 99, "Input"],
Cell[49627, 1446, 1158, 30, 99, "Input"],
Cell[CellGroupData[{
Cell[50810, 1480, 185, 3, 32, "Input"],
Cell[50998, 1485, 30454, 510, 226, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81501, 2001, 118, 1, 37, "Subsubsection"],
Cell[CellGroupData[{
Cell[81644, 2006, 618, 19, 56, "Input"],
Cell[82265, 2027, 582, 18, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82884, 2050, 457, 12, 55, "Input"],
Cell[83344, 2064, 854, 27, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84235, 2096, 460, 10, 32, "Input"],
Cell[84698, 2108, 491, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85226, 2127, 217, 5, 32, "Input"],
Cell[85446, 2134, 48117, 801, 224, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133612, 2941, 122, 1, 37, "Subsubsection"],
Cell[133737, 2944, 191, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[133953, 2951, 384, 11, 32, "Input"],
Cell[134340, 2964, 632, 16, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135009, 2985, 570, 16, 108, "Input"],
Cell[135582, 3003, 360, 8, 49, "Output"],
Cell[135945, 3013, 436, 11, 49, "Output"]
}, Open  ]],
Cell[136396, 3027, 128, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[136549, 3033, 445, 12, 32, "Input"],
Cell[136997, 3047, 814, 24, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137848, 3076, 555, 15, 35, "Input"],
Cell[138406, 3093, 546, 13, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138989, 3111, 443, 12, 55, "Input"],
Cell[139435, 3125, 1018, 34, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140490, 3164, 87, 2, 32, "Input"],
Cell[140580, 3168, 649, 19, 64, "Output"]
}, Open  ]],
Cell[141244, 3190, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[141361, 3195, 418, 10, 32, "Input"],
Cell[141782, 3207, 629, 16, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142448, 3228, 90, 2, 32, "Input"],
Cell[142541, 3232, 366, 10, 50, "Output"]
}, Open  ]],
Cell[142922, 3245, 147, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[143094, 3252, 238, 5, 32, "Input"],
Cell[143335, 3259, 190, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143562, 3267, 112, 3, 32, "Input"],
Cell[143677, 3272, 261, 7, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143975, 3284, 313, 7, 32, "Input"],
Cell[144291, 3293, 47738, 794, 224, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192078, 4093, 97, 1, 37, "Subsubsection"],
Cell[CellGroupData[{
Cell[192200, 4098, 455, 12, 34, "Input"],
Cell[192658, 4112, 620, 16, 50, "Output"]
}, Open  ]],
Cell[193293, 4131, 667, 19, 108, "Input"],
Cell[CellGroupData[{
Cell[193985, 4154, 545, 14, 34, "Input"],
Cell[194533, 4170, 739, 22, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195309, 4197, 601, 16, 37, "Input"],
Cell[195913, 4215, 517, 14, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196467, 4234, 492, 13, 55, "Input"],
Cell[196962, 4249, 991, 33, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197990, 4287, 86, 2, 32, "Input"],
Cell[198079, 4291, 594, 17, 64, "Output"]
}, Open  ]],
Cell[198688, 4311, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[198805, 4316, 461, 10, 32, "Input"],
Cell[199269, 4328, 575, 15, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199881, 4348, 288, 6, 32, "Input"],
Cell[200172, 4356, 210, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200419, 4364, 112, 3, 32, "Input"],
Cell[200534, 4369, 259, 7, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200830, 4381, 1423, 32, 99, "Input"],
Cell[202256, 4415, 174788, 2963, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377081, 7383, 756, 20, 121, "Input"],
Cell[377840, 7405, 146, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378023, 7413, 315, 7, 32, "Input"],
Cell[378341, 7422, 144, 3, 32, "Output"]
}, Open  ]],
Cell[378500, 7428, 198, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[378723, 7437, 955, 21, 32, "Input"],
Cell[379681, 7460, 16919, 285, 249, "Output"]
}, Open  ]],
Cell[396615, 7748, 2085, 56, 187, "Input"],
Cell[CellGroupData[{
Cell[398725, 7808, 101, 1, 32, "Input"],
Cell[398829, 7811, 358, 11, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399224, 7827, 619, 13, 32, "Input"],
Cell[399846, 7842, 1152, 28, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401035, 7875, 57, 1, 32, "Input"],
Cell[401095, 7878, 1479, 38, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402611, 7921, 765, 21, 77, "Input"],
Cell[403379, 7944, 1479, 36, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404895, 7985, 87, 2, 32, "Input"],
Cell[404985, 7989, 1475, 38, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406497, 8032, 425, 10, 32, "Input"],
Cell[406925, 8044, 1035, 28, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407997, 8077, 619, 16, 55, "Input"],
Cell[408619, 8095, 781, 25, 113, "Output"],
Cell[409403, 8122, 29147, 743, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438587, 8870, 122, 2, 32, "Input"],
Cell[438712, 8874, 127, 2, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
